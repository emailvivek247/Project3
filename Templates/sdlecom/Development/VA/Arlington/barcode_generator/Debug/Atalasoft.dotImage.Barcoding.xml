<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<doc>
    <assembly>
        <name>Atalasoft.dotImage.Barcoding</name>
    </assembly>
    <members>
        <member name="N:Atalasoft.Barcoding">
            <summary>Contains classes and interfaces related to barcode recognition.</summary>
        </member>
        <member name="T:Atalasoft.Barcoding.BarImageable">
            <summary>Specification for an image data provider.</summary>
            <remarks>A class that encapsulates image data, and which is not an Atalasoft.Imaging.AtalaImage can implement this interface in order to provide image data. An application whose image data is represented by some other class can define an equivalent implementation of this interface with which to invoke the BarCodeReader constructor.</remarks>
        </member>
        <member name="M:Atalasoft.Barcoding.BarImageable.GetColumnIntensities(System.Int32,System.Int32[])">
            <summary>Get the intensities of a pixel column.</summary>
            <remarks>This method is time critical: its execution time can impact significantly on the time taken by BarCodeReader.ReadBars to execute.</remarks>
            <returns>The intensity (0-255) of each pixel in the specified column.</returns>
            <param name="column">The pixel column number.</param>
            <param name="columnIntensities">An array (of length not less than Height) to be populated with the intensity (0-255) of each pixel in the specified column.</param>
        </member>
        <member name="M:Atalasoft.Barcoding.BarImageable.GetIntensity(System.Int32,System.Int32)">
            <summary>Gets a pixel intensity.</summary>
            <returns>The intensity (0-255) of the pixel.</returns>
            <remarks>This method is time critical: its execution time impacts significantly on the time taken by BarCodeReader.ReadBars to execute.</remarks>
            <param name="x">The horizontal coordinate of a pixel in the image.</param>
            <param name="y">The vertical coordinate of a pixel in the image.</param>
        </member>
        <member name="M:Atalasoft.Barcoding.BarImageable.GetRowIntensities(System.Int32,System.Int32[])">
            <summary>Get the intensities of a pixel row.</summary>
            <returns>The intensity (0-255) of each pixel in the specified row.</returns>
            <param name="row">             The pixel row number.     </param>
            <param name="rowIntensities">An array (of length not less than Width) to be populated with the intensity (0-255) of each pixel in the specified row.</param>
        </member>
        <member name="M:Atalasoft.Barcoding.BarImageable.Lock">
            <summary>Invoked by BarCodeReader.ReadBars before it gets pixel data by invoking any of GetIntensity, GetColumnIntensities, and GetRowIntensities.</summary>
            <remarks>If, for example, the position of the image data in memory needs to be temporarily fixed before it is accessed, then this method is the appropriate place to do it.</remarks>
        </member>
        <member name="M:Atalasoft.Barcoding.BarImageable.Unlock">
            <summary>Invoked by BarCodeReader.ReadBars after it has obtained pixel data through invocations of GetIntensity, GetColumnIntensities, or GetRowIntensities.</summary>
            <remarks>If, for example, the position of the image data in memory has been fixed in Lock(), then this method is the appropriate place to release it.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.BarImageable.Height">
            <summary>Determines the height of the image.</summary>
        </member>
        <member name="P:Atalasoft.Barcoding.BarImageable.Width">
            <summary>Determines the width of the image.</summary>
        </member>
        <member name="T:Atalasoft.Barcoding.BarcodeReaderEdition">
            <summary>Defined the type of BarcodeReader license.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.BarcodeReaderEdition.All1Dand2D">
            <summary>Supports recognizing only Code39.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.BarcodeReaderEdition.All1D">
            <summary>Supports recognizing all 1-D barcodes.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.BarcodeReaderEdition.Code39">
            <summary>Supports recognizing all 1-D barcodes and all 2-D barcodes.</summary>
        </member>
        <member name="T:Atalasoft.Barcoding.Directions">
            <summary>Read direction identifiers. Flagged.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Directions.NorthWest">
            <summary>Northwesterly scan (diagonally, lower right to upper left).</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Directions.SouthWest">
            <summary>Southwesterly scan (diagonally, upper right to lower left).</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Directions.SouthEast">
            <summary>Southeasterly scan (diagonally, upper right to lower left).</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Directions.NorthEast">
            <summary>Northeasterly scan (diagonally, lower left to upper right).</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Directions.North">
            <summary>Northerly scan (vertically, bottom to top).</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Directions.West">
            <summary>Westerly scan (horizontally, right to left).</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Directions.South">
            <summary>Southerly scan (vertically, top to bottom).</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Directions.East">
            <summary>Easterly scan (horizontally, left to right).</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Directions.None">
            <summary>Represents no directions. Not recommended in general use.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Directions.All">
            <summary>Represents all supported directions.</summary>
        </member>
        <member name="T:Atalasoft.Barcoding.ReadingQuality">
            <summary>ReadingQuality balances speed and accuracy of the BarCodeReader object.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.ReadingQuality.Fastest">
            <summary>This setting sacrifices accuracy in favor of speed.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.ReadingQuality.MostAccurate">
            <summary>This setting sacrifices speed for accuracy.</summary>
        </member>
        <member name="T:Atalasoft.Barcoding.Symbologies">
            <summary>Barcode symbology identifiers. Flagged.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.All1D">
            <summary>A combination of all the 1D symbologies.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.All2D">
            <summary>A combination of all the 2D symbologies.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Upce">
            <summary>    UPC E     UPC E encodations are a compressed form of UPC A. The     BarCode.DataString property holds the full uncompressed UPC A     encodation for this symbology.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Upca">
            <summary>    UPC A     UPC A barcodes are identical to EAN13 barcodes with the     same encodation except for an additional leading zero on the     latter. If both CodeEAN13" and     CodeUPCa are specified then     BarCodeReader.ReadBars can return two BarCode instances, one     for each symbology, for the one barcode.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Telepen">
            <summary>Telepen</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.RssLimited">
            <summary>    RSS Limited          It is recommended that symbols whose height is near to     the specified minimum be aligned close to horizontal or     vertical.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Rss14">
            <summary>    RSS-14          RSS-14 alternate formats are read as well as the regular     format. The alternate formats are truncated, stacked, and     stacked omnidirectional. It is recommended that the alignment     of truncated and stacked symbols be close to horizontal or     vertical.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Rm4scc">
            <summary>RM4SCC (Royal Mail 4-State Customer Code)</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Qr">
            <summary>QR Code</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Plus5">
            <summary>5-digit supplementals associated with EAN and UPC symbology barcodes.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Plus2">
            <summary>2-digit supplementals associated with EAN and UPC symbology barcodes.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Postnet">
            <summary>Postnet</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Planet">
            <summary>Planet</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Pdf417">
            <summary>PDF417</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Patch">
            <summary>Patch</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.MicroQr">
            <summary>Micro QR Code</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Itf14">
            <summary>ITF-14</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.IntelligentMail">
            <summary>Intelligent Mail</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.I2of5">
            <summary>Interleaved 2 of 5</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Ean8">
            <summary>EAN8</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Ean13">
            <summary>EAN13</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Datamatrix">
            <summary>Data Matrix</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Code93">
            <summary>Code 93</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Code39">
            <summary>Code 39</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Code32">
            <summary>    Code 32     Code 32 is also known as: Base 32,     Pharma 32/39, and Italian Pharmacode. It is     not the same as Pharmacode-Laetus.     Code 32 barcodes are similar to Code 39 barcodes with a     different encodation. If both Code39     and Code32 are specified then     BarCodeReader.ReadBars can return two BarCode instances, one     for each symbology, for the one barcode.</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Code128">
            <summary>Code 128. For more information see http://en.wikipedia.org/wiki/Code_128</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Code11">
            <summary>Code 11</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.Codabar">
            <summary>Codabar</summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.AustraliaPost">
            <summary>    Australia Post     The DataString property is a string consisting     of:                       the two digit Format Control Code, then a space,         followed by         the eight digit Delivery Point Identifier, then a         space, followed by                      the data in the Customer Information Field, if this             field is present. This data is represented by a             sequence of digits 0-3 specifying the 4-state values of             the individual bars in the field. The XOptions             property's              "australiaTable" key may be used to specify the use of the C or N table to interpret the data in the field.                  a final space then eight digits of error correction         data.     </summary>
        </member>
        <member name="F:Atalasoft.Barcoding.Symbologies.All">
            <summary>A combination of all the symbologies.</summary>
        </member>
        <member name="T:Atalasoft.Barcoding.BarCode">
            <summary>Describes a barcode contained within an image.</summary>
            <remarks>The BarCodeReader.ReadBars method of BarCodeReader returns an array of instances of this class. The methods of this class return details of the barcode, including encodation, symbology, and postion within the image.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.BoundingRect">
            <summary>Gets the bounding rectangle of the barcode.</summary>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.CheckCharPos">
            <summary>Gets the position of the check character.</summary>
            <remarks>    The position count is zero-based.     -1 if there is no check     character.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.Data">
            <summary>The raw barcode data as an array of bytes.</summary>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.DataString">
            <summary>Gets the data encoded by this barcode.</summary>
            <remarks>A String representation of the data encoded by the barcode. If the encoded data includes a check character, then the check character may or may not be included in the String. This depends on the barcode symbology. (The check character is included in the String for symbologies that encode just numeric data, and is not included for other symbologies.) Use CheckCharPos to determine if the check character is included in the String.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.EndEdgePoints">
            <summary>Gets the two points delimiting the trailing edge of the barcode.</summary>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.ErrorCorrectionLevel">
            <summary>The error correction level.</summary>
            <remarks>If the symbology's error correction level is specified by a character (i.e. QR Code: L, M, H or Q) then cast the return value to a char.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.HasSupplemental">
            <summary>Gets a value determining whether this barcode has a supplemental barcode.</summary>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.ReadDirection">
            <summary>Gets the direction in which the barcode was read.</summary>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.StartEdgePoints">
            <summary>Gets the two points delimiting the leading edge of the barcode.</summary>
            <remarks>A two-element array.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.StructAppend">
            <summary>Gets the Structured Append data for this barcode.</summary>
            <remarks>If a barcode is one of a Structured Append sequence of barcodes then this property gives the sequence data.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.Supplmental">
            <summary>Gets the supplemental barcode associated with this barcode.</summary>
            <remarks>The BarCode for the supplemental barcode if there is one, else null.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCode.Symbology">
            <summary>Gets the barcode symbology of this barcode.</summary>
            <remarks>One of the values enumerated by Symbologies</remarks>
        </member>
        <member name="T:Atalasoft.Barcoding.BarCodeEventArgs">
            <summary>Provides data for the ReadBarCode event in the BarCodeReader class.</summary>
        </member>
        <member name="M:Atalasoft.Barcoding.BarCodeEventArgs.#ctor(Atalasoft.Barcoding.BarCode)">
            <summary>Creates a new instance of BarCodeEventArgs.</summary>
            <param name="barCode">             The BarCode object.     </param>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCodeEventArgs.BarCode">
            <summary>Gets or sets the BarCode instance that this class holds.</summary>
        </member>
        <member name="T:Atalasoft.Barcoding.BarCodeReader">
            <summary>Encapsulates an image that may contain barcodes. To read barcodes from an image create an instance of this class and invoke its ReadBars method.</summary>
        </member>
        <member name="M:Atalasoft.Barcoding.BarCodeReader.#ctor">
            <summary>Constructs a new BarCodeReader class.</summary>
        </member>
        <member name="M:Atalasoft.Barcoding.BarCodeReader.#ctor(Atalasoft.Imaging.AtalaImage)">
            <summary>Creates a BarCodeReader for a specified Atalasoft.Imaging.AtalaImage image.</summary>
            <returns>    Use this constructor if the image is available as a     Atalasoft.Imaging.AtalaImage. This     is the preferred constructor because this class is optimized     for rapid access to AtalaImage pixel data.</returns>
            <param name="image">             An AtalaImage image.     </param>
        </member>
        <member name="M:Atalasoft.Barcoding.BarCodeReader.#ctor(Atalasoft.Imaging.AtalaImage,System.Boolean)">
            <summary>Creates a BarCodeReader for a specified Atalasoft.Imaging.AtalaImage image and will condtionally threshold the image.</summary>
            <remarks>This is the preferred constructor to use as it will result in the fastest barcode reading.</remarks>
            <param name="image">             An AtalaImage image.     </param>
            <param name="autoThreshold">    If true, the image will be converted to black and white     using the DynamicThreshold command if it is licensed     (DocumentImaging) or the ThresholdCommand otherwise.</param>
        </member>
        <member name="M:Atalasoft.Barcoding.BarCodeReader.#ctor(Atalasoft.Imaging.AtalaImage,Atalasoft.Imaging.ImageProcessing.ImageCommand)">
            <summary>Construct a new BarCodeReader with the supplied image and apply the thresholdCommand to the image.</summary>
            <remarks>    If the image passed in is 1-bit, the thresholdCommand is     ignored. If the resulting image from applying the threshold     command is not Pixel1bppIndexed, it will be ignored.</remarks>
            <param name="image">             An AtalaImage image.     </param>
            <param name="thresholdCommand">An ImageCommand to perform conversion to black and white.</param>
        </member>
        <member name="M:Atalasoft.Barcoding.BarCodeReader.#ctor(Atalasoft.Barcoding.BarImageable)">
            <summary>Creates a BarCodeReader for an image represented by the specified image data provider.</summary>
            <returns>Use this constructor if the image data is in some private or proprietory format and it is not convenient to create an AtalaImage from the data.</returns>
            <param name="image">             An image data provider.     </param>
        </member>
        <member name="M:Atalasoft.Barcoding.BarCodeReader.Dispose">
            <summary>Disposes the BarCodeReader class.</summary>
            <remarks>The BarCodeReader holds onto a number of resources that need to be disposed. It is strongly advised that you dispose any BarCodeReader objects as soon as you are done with them.</remarks>
        </member>
        <member name="T:Atalasoft.Barcoding.BarCodeReaderBase">
            <summary>An abstract base class for barcode reading that implements many of the core features.</summary>
        </member>
        <member name="M:Atalasoft.Barcoding.BarCodeReaderBase.IsSymbologySupported(Atalasoft.Barcoding.Symbologies)">
            <summary>Indicates is a symbology is supported by a BarCodeReader.</summary>
            <returns>True if the symbology is supported, false otherwise.</returns>
            <remarks>    IsSymbologySupported will only report what the barcode     reader is licensed to support. If the license is only for 1D,     it will return true only for 1D barcodes.     IsSymbologySupported will check for multiple symbologies     at once, returning true only if all requested symbologies are     supported.     If a symbology is not supported, ReadBars will ignore     it.</remarks>
            <param name="sym">The symbology or symbologies to check support for.</param>
        </member>
        <member name="M:Atalasoft.Barcoding.BarCodeReaderBase.ReadBars(Atalasoft.Barcoding.ReadOpts)">
            <summary>Read barcodes in the image.</summary>
            <returns>An array of BarCode instances. Each element represents a barcode read from the image. The size of the collection is zero if no barcodes are read.</returns>
            <param name="readOpts">Specifying the options to use in reading the image.</param>
        </member>
        <member name="P:Atalasoft.Barcoding.BarCodeReaderBase.SupportedSymbologies">
            <summary>Returns all the licensed and supported symbologies for the BarCodeReader.</summary>
        </member>
        <member name="E:Atalasoft.Barcoding.BarCodeReaderBase.ReadBarCode">
            <summary>This event is fired after a barcode is found</summary>
        </member>
        <member name="T:Atalasoft.Barcoding.BarcodeReaderLicense">
            <summary>This class is used for licensing purposes, or for inspecting the current Edition.</summary>
        </member>
        <member name="P:Atalasoft.Barcoding.BarcodeReaderLicense.Edition">
            <summary>Gets the license edition for the BarCodeReader.</summary>
        </member>
        <member name="T:Atalasoft.Barcoding.ReadOpts">
            <summary>Encapsulates the options for reading barcodes from images.</summary>
        </member>
        <member name="M:Atalasoft.Barcoding.ReadOpts.#ctor">
            <summary>Constructs a new ReadOpts object.</summary>
        </member>
        <member name="M:Atalasoft.Barcoding.ReadOpts.#ctor">
            <summary>Creates an instance with each property initialised as described in the Public Instance Properties section.</summary>
        </member>
        <member name="M:Atalasoft.Barcoding.ReadOpts.#ctor(Atalasoft.Barcoding.ReadOpts)">
            <summary>Creates a new instance, initialized to match the values of the specified ReadOptions.</summary>
            <param name="opts">             The ReadOpts from which to         copy initial values to a newly constructed         ReadOptions.     </param>
        </member>
        <member name="P:Atalasoft.Barcoding.ReadOpts.Direction">
            <summary>Gets or sets the read direction.</summary>
            <remarks>    Different      Directions may be logically OR'd to read in more than one     direction.     Using all read directions will slow down the reading     process.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.ReadOpts.EnforceChecksum">
            <summary>Gets or sets a value to that will enforce the checksum in those symbologies in which a checksum character is optional. Initialized to false by constructor.</summary>
            <remarks>    These symbologies are:                                    Code 11 (first 'C' checksum always             enforced, second 'K' checksum optional)                               Code 39                               Code 93 (2 check characters)                               Interleaved 2 of 5                   If set to false then a     checksum is not carried out and the character that would     otherwise be the checksum character is just a character in the     encodation string. If set to true then a checksum is     performed and the barcode is only recognized if the checksum     character is correct.     Initialized to false by     constructor.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.ReadOpts.ReadingQuality">
            <summary>Gets or sets the speed or accuracy of the BarCodeReader.</summary>
            <remarks>ReadingQuality.Fastest sacrifices accuracy for speed. ReadingQuality.MostAccurate is the default value.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.ReadOpts.RectOfInterest">
            <summary>Gets or sets a rectangular region of the image to look for barcodes.</summary>
            <remarks>Default is Rectangle.Empty which will inspect the entire image.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.ReadOpts.ScanBarsToRead">
            <summary>Gets or sets the number of bars to attempt to read. The value of this field is not significant when searching two color (e.g. black and white) images for one-dimensional or stacked symbols. Initialised to 1 by constructor.</summary>
            <remarks>    Setting this value to the actual number of bars in the     image can significantly improve performance when the image has     more than two colors, or when searching for two-dimensional     (i.e. Data Matrix) symbols.     Default is 1.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.ReadOpts.ScanInterval">
            <summary>Gets or sets the scan interval. Initialized to 5 by constructor.</summary>
            <remarks>As of DotImage 7.0b, the scan interval is currently ignored. ScanInterval may be used in a future release.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.ReadOpts.SkipAllValidation">
            <summary>Sets or gets whether or not the barcode reader should skip validation.</summary>
            <remarks>This property is useful in reading barcodes that are damaged or malformed. Barcodes read with this property set to true should not be considered to be reliable.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.ReadOpts.Symbology">
            <summary>    Gets or sets the barcode symbology     Syntax</summary>
            <remarks>    Different      Symbologies may be logically OR'd to search for more than     one barcode type.     Searching for more symbologies will slow down reading.     Notably, searching for multiple 2D barcodes will have a greater     effect than searching for multiple 1D barcodes.</remarks>
        </member>
        <member name="P:Atalasoft.Barcoding.ReadOpts.XOptions">
            <summary>Extra options for configuring the reader.</summary>
            <remarks>As of DotImage 7.0b, XOptions are ignored and no longer supported.</remarks>
        </member>
        <member name="T:Atalasoft.Barcoding.StructuredAppend">
            <summary>Structured Append barcode data.</summary>
        </member>
        <member name="T:Atalasoft.Barcoding.BarCodeEventHandler">
            <summary>Event handler for events that require a BarCode object.</summary>
            <param name="sender">The originating object of the event (typically BarCodeReader).</param>
            <param name="e">The event args.</param>
        </member>
    </members>
</doc>
