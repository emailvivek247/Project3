<#assign form  =JspTaglibs["http://www.springframework.org/tags/form"]>
<#assign spring=JspTaglibs["http://www.springframework.org/tags"]>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><title><@spring.message code="client.site.title.name" /></title>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<link rel="shortcut icon" href="resources/custom_resources/images/favicon.ico"/>
<link rel="stylesheet" href="resources/styles/validationEngine.jquery.css" type="text/css" />
<link rel="stylesheet" href="resources/styles/login.css" />
<link rel="stylesheet" href="resources/styles/jquery-ui-1.8.11.base.css" />
<link rel="stylesheet" href="resources/styles/jquery-ui-custom-ext.css" />

<!--FONT AWESOME CSS-->
<link rel="stylesheet" href="resources/styles/FontAwesome/css/font-awesome.min.css">

<link rel="stylesheet" href="resources/custom_resources/styles/jqueryui/custom.css" type="text/css" media="all"/>
<link rel="stylesheet" href="resources/custom_resources/styles/screen.css" type="text/css" media="all"/>
<!-- Skin stylesheet -->
<link class="skins" rel="stylesheet" href="resources/custom_resources/styles/skins/silver.css" type="text/css" media="all"/>
<link rel="stylesheet" type="text/css" href="resources/custom_resources/javascripts/fancybox/jquery.fancybox-1.3.0.css" media="screen"/>
<!--[if IE 7]>
<link rel="stylesheet" href="resources/custom_resources/styles/ie7.css" type="text/css" media="all"/>
<![endif]-->
<link href="resources/styles/kendoui/kendo.common.min.css" rel="stylesheet">
<link href="resources/styles/kendoui/kendo.default.min.css" rel="stylesheet">

<script type="text/javascript" src="resources/javascripts/jquery.min.js"/></script>
<script type="text/javascript" src="resources/javascripts/jquery-ui.min.js"/></script>
<script type="text/javascript" src="resources/javascripts/jquery.validationEngine-en.js"></script>
<script type="text/javascript" src="resources/javascripts/jquery.validationEngine.js"></script>
<script type="text/javascript" src="resources/javascripts/jquery.cookie.js"></script>



<!-- Jquery and plugins -->
<script type="text/javascript" src="resources/custom_resources/javascripts/fancybox/jquery.fancybox-1.3.0.js"></script>
<script type="text/javascript" src="resources/custom_resources/javascripts/jquery.easing.js"></script>
<script type="text/javascript" src="resources/custom_resources/javascripts/anythingSlider.js"></script>
<script type="text/javascript" src="resources/custom_resources/javascripts/jquery.validate.js"></script>
<script type="text/javascript" src="resources/custom_resources/javascripts/hint.js"></script>
<script type="text/javascript" src="resources/custom_resources/javascripts/cufon.js"></script>
<script type="text/javascript" src="resources/custom_resources/fonts/Colaborate_Thin.font.js"></script>
<script type="text/javascript" src="resources/custom_resources/javascripts/browser.js"></script>
<script type="text/javascript" src="resources/custom_resources/javascripts/custom.js"></script>
<script type="text/javascript" src="resources/javascripts/passwordStrength.js"></script>
<script type="text/javascript" src="resources/javascripts/jquery.maskedinput.min.js"></script>
<script src="resources/javascripts/kendoui/kendo.all.min.js"></script>

<!--ARL HEADER-->
	<meta name="msapplication-TileColor" content="#015CB9">
	<meta name="msapplication-TileImage" content="https://d1rn8z435cu2eh.cloudfront.net/apple-touch-icon-144x144.png">
	<link rel="shortcut icon" href="https://d1rn8z435cu2eh.cloudfront.net/favicon.ico" sizes="16x16 32x32 64x64" type="image/x-icon">
	<link rel="apple-touch-icon" href="https://d1rn8z435cu2eh.cloudfront.net/apple-touch-icon-152x152.png" sizes="152x152">
	<link rel="apple-touch-icon" href="https://d1rn8z435cu2eh.cloudfront.net/apple-touch-icon-144x144.png" sizes="144x144">
	<link rel="apple-touch-icon" href="https://d1rn8z435cu2eh.cloudfront.net/apple-touch-icon-120x120.png" sizes="120x120">
	<link rel="apple-touch-icon" href="https://d1rn8z435cu2eh.cloudfront.net/apple-touch-icon-114x114.png" sizes="114x114">
	<link rel="apple-touch-icon" href="https://d1rn8z435cu2eh.cloudfront.net/apple-touch-icon-72x72.png" sizes="72x72">
	<link rel="apple-touch-icon" href="https://d1rn8z435cu2eh.cloudfront.net/apple-touch-icon-57x57.png" sizes="57x57">
	<link rel="apple-touch-icon" href="https://d1rn8z435cu2eh.cloudfront.net/apple-touch-icon.png">
	<link rel='stylesheet' id='open-sans-pt-sans-css'  href='resources/styles/OpenSans.css' type='text/css' media='all' />
	
	<script type="text/javascript">
	var _gas = _gas || [];
	_gas.push(['_setAccount', 'UA-23381988-1']); // All ACG
	_gas.push(['_trackPageview']);
	_gas.push(['_gasTrackOutboundLinks']);
	_gas.push(['_gasTrackMailto']);
	_gas.push(['_gasTrackDownloads', {
	  category: 'Download',
	  extensions: ['']
	}]);
	_gas.push(['_gasTrackYoutube', {
	  percentages: [1, 20, 40, 60, 80],
	  category: 'YouTube Video'
	}]);
	_gas.push(['_gasTrackVimeo', {
	  category: 'Vimeo Video'
	}]);
	_gas.push(['_gasTrackAudio']);
	_gas.push(['_gasTrackVideo']);
	(function () {
	  var ga = document.createElement('script');
	  ga.type = 'text/javascript';
	  ga.async = true;
	  ga.src = 'resources/javascripts/gas.min.js';
	  var s = document.getElementsByTagName('script')[0];
	  s.parentNode.insertBefore(ga, s);
	})();
	</script>
<!--END ARL HEADER-->

<style>

div.ADCSI {
	width: 1000px;
}
span.ADCSI_leftcol {
	width: 150px;
	text-align:right;
	display: inline-block;
}
.simple_overlay {
	display:none;
	z-index:10000;
	background-color:#333;
	width:675px;
	min-height:200px;
	border:1px solid #666;
}
.simple_overlay .close {
	background-image:url('resources/images/overlayclose.png');
	position:absolute;
	right:-15px;
	top:-15px;
	cursor:pointer;
	height:35px;
	width:35px;
}
.details {
	margin:10px;
	text-align:center;
}

.details_inner {
	text-align:left;
	margin:10px;
}
.details h2 {
	color:#aba;
	margin:0 0 -10px 0;
}
.toolTipHandler {
	cursor:pointer;
}
div.ADCSI_row {
	margin-left:0px;
	margin-right:0px;
	text-align:left;
}
table, tr, td {
	border: 0px solid #ffffff;
}
#recaptcha_widget_div input {
	line-height:15px;
	height:auto;
}
div#access_description {
	position: absolute;
	width: 974px;
	padding: 10px;
	background: #fff;
	color: #000000;
	border: 3px solid #aba;
	z-index: 1;
	float: right;
	text-align:justify;
	top:150px;
	-webkit-box-shadow: 0px 3px 10px rgba(34, 25, 25, 0.4);
	-moz-box-shadow: 0px 3px 10px rgba(34, 25, 25, 0.4);
	-ms-box-shadow: 0px 3px 10px rgba(34, 25, 25, 0.4);
	-o-box-shadow: 0px 3px 10px rgba(34, 25, 25, 0.4);
	box-shadow: 0px 3px 10px rgba(34, 25, 25, 0.4);
}
img#closeIcon{
	width:40px;
	top:0;
	float:right;
}

</style>

</head>
<body>

					
<div id="wrapper">
<!-- Begin content -->
	<div style="width: 80%; margin-left: auto;margin-right:auto;margin-top:100px;">
		<div id="ADCSI" class="ADCSI" style="margin-top: 0px; margin-bottom: 12px;">
			<div class="ADCSI_title" id="ADCSI_title">				
					<span style="width:49%;text-align:left;display:inline-block;"><i class="fa fa-users blue" style="font-size:20px;"></i>&nbsp;<b><@spring.message code="security.authentication.firmUserSubscriptionTitle" /></b></span>
					<span style="width:49%;text-align:right;display:inline-block;"><a href="accountInformation.admin"><i class="fa fa-info-circle blue" style="font-size:18px;"></i>&nbsp;<@spring.message code="form.name.accountInformation" /></a>&nbsp;(${request.getRemoteUser()})</span>
					
			</div>					
													
					
					
					<br /><br />
						<table style="width: 100%; text-align:center;vertical-align:top;" border="0" cellspacing="1" cellpadding="4">
							<tr style="text-align:center;vertical-align:top;">
								<td style="text-align:center;vertical-align:top;width:450px">
									<Label id="errorStatusLabel" style="text-align: center; vertical-align: middle">&nbsp;</Label>
								</td>
							</tr>
							<!-- Select Dropdown for Select Subscripton -->
							<tr style="text-align:center;vertical-align:top;">
								<td style="text-align:center;vertical-align:top;width:450px">
										<div class="ADCSI_row">
										<span class="ADCSI_leftcol"><@spring.message code="security.authentication.selectSubscription" /></span>
										<span class="ADCSI_rightcol" style="width: 250px; display: inline-block; ">
											<span>
												<select id="firmSubscription" name="firmSubscription" class="validate[required]" style="width:220px" tabindex="7">
													<!--option value="0" selected>ALL</option-->
										            <#if subscriptions?has_content>
											            <#foreach subscription in subscriptions>
											            	<#if subscription?has_content>
							                                    <option value="${subscription.accessId}"> ${subscription.siteName} - ${subscription.subscription}</option>
								                            </#if>
									                    </#foreach>
								                    </#if>
								                  </select>
											</span>
										</span>
									</div>
								</td>
							</tr>
	
	
	<!--Display The Grid Start -->
						<tr style="text-align:center;vertical-align:top;">
							<td style="text-align:center;vertical-align:top;width:450px">
								<div id="manageFirmLevelUsersDiv" class="k-content">
								            <div id="firmUserGrid"></div>

											<script type="text/x-kendo-template" id="template">
											    <div class="toolbar">
											        <label class="subscription-label" for="subscription-category"><font size=3 color='black'>Add a Subscription:</font></label>
											        <input type="search" id="subscription-category" style="width: 230px"></input>
											    </div>
											</script>
											
											<!-- Add User Popup Window Definition -->
											<script type="text/x-kendo-template" id="add-user-window-template">
											    <div id="addUserDiv">
											    	<form id="addUserForm" action="" onsubmit="return false;">
											    	<table>
					    								<tr style="text-align:center;vertical-align:top;">
															<td colspan="2" style="text-align:center;vertical-align:top;width:450px">
																<Label id="addUserErrorLabel" style="text-align: center; vertical-align: middle">&nbsp;</Label>
															</td>
														</tr>
											    	
														<tr>
													        <td align="right">
													            <label class="control-label required"><@spring.message code="security.authentication.addSubscription"/></label>
													        </td>
													        <td>
													            <select id="addSubscription" name="accessId" class="validate[required]" style="width:220px" tabindex="7" data-bind="value:accessId">
																	<option value="" selected>Select a Subscription</option>
														            <#if subscriptions?has_content>
															            <#foreach subscription in subscriptions>
																               <#if (subscription?has_content)>
												                                    <option value="${subscription.accessId}"> ${subscription.siteName} - ${subscription.subscription}</option>
																			  </#if>
													                    </#foreach>
												                    </#if>
															     </select>
													        </td>
													    </tr>
													    <tr><td>&nbsp;</td></tr>
													    
														<tr>
													        <td align="right">  <label class="control-label required"><@spring.message code="security.authentication.username"/></label>  </td>
													        <td>  <input type="email" class="textbox" name="username" data-bind="value:username" 
													        					maxlength="55" required validationMessage="Email is required !" data-email-msg="Email format is not valid"/>   </td>
													        
													    </tr>
													    <tr><td>&nbsp;</td></tr>
														<tr>
													        <td align="right">  <label class="control-label required"><@spring.message code="security.authentication.first"/></label>  </td>
													        <td>  <input type="text" class="k-textbox" name="firstName" data-bind="value:firstName"  maxlength="50" required validationMessage="First Name is required !"/>   </td>
													    </tr>
													    <tr><td>&nbsp;</td></tr>
														<tr>
													        <td align="right">  <label class="control-label required"><@spring.message code="security.authentication.last"/></label>  </td>
													        <td>  <input type="text" class="k-textbox" name="lastName" data-bind="value:lastName" maxlength="50" required validationMessage="Last Name is required !"/>   </td>
													    </tr>
													    <tr><td>&nbsp;</td></tr>
														<tr>
													        <td align="right">  <label class="control-label required"><@spring.message code="security.authentication.phone"/></label>  </td>
													        <td>  <input type="tel" class="k-textbox" name="phone" id="phone" placeholder="xxx-xxx-xxxx" data-bind="value:phone"  
													        			maxlength="14" required validationMessage="Please enter a phone number (xxx-xxx-xxxx)"/>   </td>
													    </tr>
													    <tr><td>&nbsp;</td></tr>
														<tr>
													        <td align="right">  <label class="control-label required"><@spring.message code="security.authentication.firmName"/></label>  </td>
													        <td>  <input type="text" class="k-textbox" name="firmName" data-bind="value:firmName"  maxlength="100" />   </td>
													    </tr>
													    <tr><td>&nbsp;</td></tr>
													    <#if isFirmNumberRequired?has_content && isFirmNumberRequired>
															<tr>
														        <td align="right">  <label class="control-label required"><@spring.message code="security.authentication.firmNumber"/></label>  </td>
														        <td>  <input type="text" class="k-textbox" name="firmNumber" data-bind="value:firmNumber"  maxlength="20" />   </td>
														    </tr>
														    <tr><td>&nbsp;</td></tr>
														</#if>
														<#if isBarNumberRequired?has_content && isBarNumberRequired>
															<tr>
														        <td align="right">  <label class="control-label required"><@spring.message code="security.authentication.barNumber"/></label>  </td>
														        <td>  <input type="text" class="k-textbox" name="barNumber" data-bind="value:barNumber"  maxlength="20"/>   </td>
														    </tr>
														    <tr><td>&nbsp;</td></tr>
													    </#if>
											    	</form>
														<tr align="center">
															<td align="right">  <button id="addUserButton" class="k-button" >Create</button></td>
															<td align="left"> <button id="cancelUserButton" class="k-button" >Cancel</button></td> 
													    </tr>
													    
											    	</table>
											    	
											    </div>
											</script>
											<!-- Add User Popup Window Definition -->

											<!-- Add Subscription To User Popup Window Definition -->
											<script type="text/x-kendo-template" id="add-sub-to-user-window-template">
											    <div id="addSubToUserDiv">
											    	<form id="addSubToUserForm" action="" onsubmit="return false;">
											    	<table>
					    								<tr style="text-align:center;vertical-align:top;">
															<td colspan="3" style="text-align:center;vertical-align:top;width:450px">
																<Label id="addSubToUserErrorLabel" style="text-align: center; vertical-align: middle">&nbsp;</Label>
															</td>
														</tr>
											    		<tr><td>&nbsp;</td></tr>
														<tr>
													        <td align="right">
													            <label class="control-label required"><@spring.message code="security.authentication.addSubscription"/></label>
													        </td>
													        <td colspan="2">
													            <select id="addSubToUserSelect" name="accessId" class="validate[required]" style="width:220px" tabindex="7" data-bind="value:accessId">
																	<option value="" selected>Select a Subscription</option>
														            <#if subscriptions?has_content>
															            <#foreach subscription in subscriptions>
																               <#if (subscription?has_content)>
												                                    <option value="${subscription.accessId}"> ${subscription.siteName} - ${subscription.subscription}</option>
																			  </#if>
													                    </#foreach>
												                    </#if>
															     </select>
													        </td>
													    </tr>
													    <tr><td>&nbsp;</td></tr>
													    
														<tr>
													        <td align="right">  <label class="control-label required"><@spring.message code="security.authentication.username"/></label>  </td>
													        <td>  <input type="email" class="textbox" name="username" data-bind="value:username" 
													        					maxlength="55" required validationMessage="Email is required !" data-email-msg="Email format is not valid"/>   </td>
															<td> <button id="checkUserButton" class="k-button" >Check if Exists</button></td>													        					
													        
													    </tr>
													    <tr><td>&nbsp;</td></tr>
											    	</form>
														<tr align="center">
															<td align="right"> <button id="okSubButton" class="k-button" >Add</button></td>
															<td align="left"> <button id="cancelSubButton" class="k-button" >Cancel</button></td> 
															<td align="left"> <button id="createUserButton" class="k-button" style="display: none;">Create User</button></td>
													    </tr>
											    	</table>
											    	
											    </div>
											</script>
											<!-- Add Subscription to User Popup Window Definition END -->
									

											<!-- Confirmation Dialog Used for Remove/Enable/Disable Access -->
											<script type="text/x-kendo-template" id="confirm-window-template">
												<div id="confirmDialogDiv">
													<form id="ConfirmDialogForm" action="" onsubmit="return false;">
											    	<table>
														<tr>
													        <input type="hidden" name="key"/>
													        <input type="hidden" name="action"/>
													        <td>  &nbsp; </td>
													    </tr>
														<tr>
													        <td colspan="2">  <label align="center" name="confirmMessage" id="confirmMessage" class="control-label required"><font size="3">Are you sure you want to Remove Subscription ?</font></label>  </td>
													    </tr>
														<tr>
													        <td>  &nbsp; </td>
													        <td>  &nbsp; </td>
													    </tr>
														<tr rowspan="2">
													        <td align="right">  <label class="control-label required"><@spring.message code="form.name.comments"/>&nbsp;&nbsp;</label>  </td>
													        <td><textarea  class="k-textbox" style="height: 50px; width: 160px;" name="comments" maxlength="100" required validationMessage="Comments are required !"></textarea></td>
													    </tr>
														<tr>
													        <td>  &nbsp; </td>
													        <td>  &nbsp; </td>
													    </tr>
														<tr>
													        <td>  &nbsp; </td>
													        <td>  &nbsp; </td>
													    </tr>
													</form>
														<tr align="center">
															<td align="right">  <button id="okConfirmButton" class="k-button" >Ok</button></td>
															<td align="left"> <button id="cancelConfirmButton" class="k-button" >Cancel</button></td> 
													    </tr>
											    	</table>
												
												</div>
											</script>		
											<!-- Confirmation Dialog End -->																	            
								            
								            <script>
								            
								             $(document).ready(function () {
								             	$.ajaxSetup({ cache: false }); 
									            var firmUserDataSource = new kendo.data.DataSource({
									   				 transport: {
									        			read: {
									        					url: function(e){
																	var url = 'getFirmUsers.admin?adminUserName=${adminUserName}';
																	var subscription = $('#firmSubscription').val();
																	url = url + '&accessId=' + subscription;
																	return url;
						        								},
												            dataType: "json"
												        },
								                        create: {
								                        		url: function(e){
																	var url = 'addFirmUser.admin?adminUserName=${adminUserName}';
																	return url;
						        								},
															dataType: "json",
															type: "POST",
															complete: function(result, textStatus) {
																if(textStatus == 'success'){
																	// Success
																	var response = JSON.parse(result.responseText);
																	displaySuccessMessage(getErrorDesription(response));
																} 
															} 
								                        },

								                         parameterMap: function(options, operation) {
											                if (operation !== "read" && options.models) {
											                    return {
											                        models: kendo.stringify(options.models)
											                    };
											                }
											                return options;
											            }
								                 	},
								                 	
								                 	
													
													// If there was an error on server side
								                 	error: function (e) {
													    var grid = $("#firmUserGrid").data("kendoGrid");
												 		e.preventDefault();
												        
												        //roll back the changes
												        grid.cancelChanges();
												        
												        // Fetch the error description and display it
														var response = JSON.parse(e.xhr.responseText);
														displayErrorMessage(getErrorDesription(response));
														
													},
													
									    			// describe the result format
									    			schema: {
									    					data: "models",
									    					errors : "error",
								                                model: {
								                                	id: "username",
								                                    fields:  {
								                                        username: { type: "email"},
								                                        firstName: { },
								                                        lastName: { },
								                                        phone: {  } ,
								                                        subscriptionAction: { },
								                                        subscriptionStatus: { },
								                                        userAccessId: {},
								                                        removable: {},
								                                        userLocked: {},
								                                        nodeName: {}
								                                    }
								                                }
								                         },
								                         pageSize: 10,
								                 		batch: false
								                });
								                
								                 $("#firmUserGrid").kendoGrid({
								                        dataSource: firmUserDataSource,
								                        change: onChange,
								                        scrollable: true,
								                        navigatable: true,
								                        pageable: {
								                        		refresh: true,
								                        		pageSizes: true,
								                        		pageSize: true,                        		
								                        		numeric: true,
								                        		info: true,
								                        		input: true
								                        },  
								                        height: 430,
	
								                        toolbar: [
									                         { name: "create", text: "Add User" },
									                         { name: "edit", text: "Add Subscription To User" }
								                        ],
								                        columns: [
								                            { field: "username", title: "User Name",  width: 155,  template: function(e){ return e.username.toLowerCase();}}, 
								                            { field: "firstName", title: "First Name", width: 110, template: function(e){ return toCamelCase(e.firstName); } },
								                            { field: "lastName", title: "Last Name", width: 110, template: function(e){ return toCamelCase(e.lastName); } },
								                            { field: "phone", title: "Phone Number", width: 110 },
								                            { field: "subscriptionStatus", title: "Subscription Status", width: 95, template: function(e){ return toCamelCase(e.subscriptionStatus); } },
								                            { field: "userLocked", title: "User Status", width: 72, template: "#= userLocked ? 'Locked' : 'Unlocked' #" },
								                            { field: "subscriptionAction", title: "Actions", width: 75,	template: getActionLink , width: 100 }
								                            ], 

								                            //editable: "popup",
								                            editable: {
																mode: "popup"
															}
  															
								                 });
								                 
												// Add User dialog Definition						                 
												var addKendoWindow = $("<div id='addUserWindow'/>").kendoWindow({
							                            title: "Add User",
							                            width: 400,
							                            modal: true,
							                            close: onAddUserClose,
							                            actions: [
							                                "Close"
							                            ],
							                            content: {
													        template: $("#add-user-window-template").html()
													    }
													    
												}).data("kendoWindow");
												
												// Add User dialog Definition						                 
												var addSubKendoWindow = $("<div id='addSubWindow'/>").kendoWindow({
							                            title: "Add Subscription To User",
							                            width: 450,
							                            modal: true,
							                            close: onAddSubToUserClose,
							                            actions: [
							                                "Close"
							                            ],
							                            content: {
													        template: $("#add-sub-to-user-window-template").html()
													    },
													    visible: false,
													    activate: function () {
											                $('#addUserForm input[name=accessId]').select();
											            }
												}).data("kendoWindow");

												
												// Confirm dialog Definition
												var confirmKendoWindow = $("<div id='confirmWindow'/>").kendoWindow({
							                            title: "Confirmation",
							                            width: 270,
							                            modal: true,
							                            close: onConfirmClose,
							                            actions: [
							                                "Close"
							                            ],
							                            content: {
													        template: $("#confirm-window-template").html()
													    }
													    
												}).data("kendoWindow");

												//Open a custom window on add user button clicked 
								                  $(".k-grid-add").on("click",function(){
								                  	// Disable the previous validation errors
								                  	addKendoWindow.element.find("span.k-tooltip-validation").hide();
								                    var newWindow = addKendoWindow.open().center();
													return false;
							                    });
							                    
								                  $(".k-grid-edit").on("click",function(){
								                  	// Disable the previous validation errors
								                  	addSubKendoWindow.element.find("span.k-tooltip-validation").hide();
								                  	// Make Create User button invisible
 													document.getElementById("createUserButton").style.display="none";
								                    var newWindow = addSubKendoWindow.open().center();
													return false;
							                    });

							                    //Ok clicked : confirm dialog -- Used for Remove/Enable/Disable Access 
							                    $("#okConfirmButton").click( function (e) {
                    								var confirmValidator = $('#confirmDialogDiv').kendoValidator().data('kendoValidator');
                    								if(confirmValidator.validate()){
													 	// Get the key from form
													 	var confirmBoxElem =  document.forms['ConfirmDialogForm'];
													 	var uid = confirmBoxElem.elements['key'].value;
													 	var action = confirmBoxElem.elements['action'].value;
													 	
													 	// Find a datarow/user  
													 	var user = $('#firmUserGrid').data("kendoGrid").dataSource.getByUid(uid);
													 	var htmlGridRow = $("#firmUserGrid").data("kendoGrid").tbody.find("tr[data-uid='" + user.uid + "']");
                    								
                    									//validated fine , take an action
													    if(action == 'Disable'){
															callEnableDisableSubscriptionService(user, htmlGridRow, false);
														} else if(action == 'Enable'){
															callEnableDisableSubscriptionService(user, htmlGridRow, true);
														}	else if(action == 'Remove'){
															callRemoveAccessService(user);										
														} else if (action == 'Lock'){
															callLockUnlockUser(user, true);
														} else if (action == 'Unlock'){
															callLockUnlockUser(user, false);
														}
                    								}
							                    	return false;
                    							});
                    							
                    							//Event of cancel confirm diaglog 
							                    $("#cancelConfirmButton").click( function (e) {
                    								var confirmValidator = $('#confirmDialogDiv').kendoValidator().data('kendoValidator');
				                                   	onConfirmClose();
							                    	confirmKendoWindow.close();	
							                    	return false;
                    							});
                    							
							                    //Ok clicked : Remove Subscription dialog  
							                    $("#okSubButton").click( function (e) {
                    								var addSubValidator = $('#addSubToUserDiv').kendoValidator().data('kendoValidator');
                    								if(addSubValidator.validate()){
													 	// Get the key from form
													 	addSubToUser();
													}                    								
							                    	return false;
                    							});
							                    
                    							
                    							//Event of cancel confirm diaglog 
							                    $("#cancelSubButton").click( function (e) {
                    								//var confirmValidator = $('#addSubToUserDiv').kendoValidator().data('kendoValidator');
				                                   	onAddSubToUserClose();
							                    	addSubKendoWindow.close();	
							                    	return false;
                    							});
                    							
							                    //Create User button clicked from remove subscription 
							                    $("#createUserButton").click( function (e) {
													// Take the user name and populate to add user window
												 	var addSubFormElem =  document.forms['addSubToUserForm'];
												 	var accessId = addSubFormElem.elements['accessId'].value;
												 	var userName = addSubFormElem.elements['username'].value;
												 	
												 	var addUserFormElem =  document.forms['addUserForm'];
												 	addUserFormElem.elements['accessId'].value = accessId;
												 	addUserFormElem.elements['username'].value = userName;
																				                    	
							                    	$("#addSubWindow").data("kendoWindow").close();
	        										$("#addUserWindow").data("kendoWindow").open().center();
							                    	return false;
                    							});

                    							// Event of add user button
                    							$("#addUserButton").click( function (e) {
                    								var validator = $('#addUserForm').kendoValidator().data('kendoValidator');
                    								if(validator.validate()){
                    									//validated fine add the user
                    									 addFirmUser();
                    								}
                       								return false;
                    							});
							                    
							                    //Event of cancel button on add user window
							                    $("#cancelUserButton").click( function (e) {
							                    		// Close the window
                       									 addKendoWindow.close();
                       									 // Reset the form fields
							                    		 resetAddUserFields();
							                    		 // Set the error label to blank
							                    		 setAddErrorMessage('');
							                    		 return false;
                    							});
                    							
                    							// Event of add user button
                    							$("#checkUserButton").click( function (e) {
                    								var validator = $('#addSubToUserDiv').kendoValidator().data('kendoValidator');
                    								if(validator.validate()){
                    									//validated fine add the user
                    									checkUser();
                    								}
                       								return false;
                    							});
                    							
                    							

										});
								            
								                 
								            </script>
									             <style scoped>
									                #firmUserGrid .k-toolbar
									                {
									                    min-height: 27px;
									                    padding: 1.3em;
									                }
									                .subscription-label
									                {
									                    vertical-align: middle;
									                    padding-right: .5em;
									                }
									                <!-- Wrap the grid headers -->
									                .k-grid .k-grid-header .k-header .k-link {height: auto;}
													.k-grid .k-grid-header .k-header {white-space: normal;}
													.k-grid .k-button.k-grid-add{ float: left;}
													.k-grid .k-button.k-grid-edit{ float: right;}
									                #subscription-category
									                {
									                    vertical-align: middle;
									                }
									                .toolbar {
									                    float: right;
									                }
									                
									            </style>
								        </div>							
							</td>
						</tr>
	<!--Display The Grid End -->
												
				</table>

				
				
		</div>
	</div>
</div>



<script type="text/javascript">



	function addSubToUser(){
	 	var url = "addFirmUserAccess.admin?adminUserName=${adminUserName}";
	 	
	 	var formElem = $('#addSubToUserForm');
	 	var serializedData = formElem.serialize();
	 	
	 	 $.ajax({
	        url: url,
	        type: "POST",
	        dataType: "json",
	        data: serializedData,
	        success: function (results) {
	                if(results){
	                    if(results.errorCode == 'SUCCESS'){
							var grid = $('#firmUserGrid').data('kendoGrid');
							grid.dataSource.read();
	                    	displaySuccessMessage('Subscription added successfully');
							// Close the window, job is done 			
							var kw =  $('#addSubWindow').data('kendoWindow');
							kw.close();
				 		} else if(results.errorCode == 'ERROR'){
				 			displaySubError(getErrorDesription(results));
				 		}
	            	}
	        },
	        
	        // Error occured on server 
	        error: function (xhr, ajaxOptions, thrownError) {
	        	var response = JSON.parse(xhr.responseText);
	        	displaySubError(getErrorDesription(response));
	        }
	    });
	}
	
	function checkUser(){
	 	var url = "checkUser.admin?";
	 	
	 	var addSubFormObject =  document.forms['addSubToUserForm'];
	 	var username = addSubFormObject.elements['username'].value;
	 	url = url + 'username=' + username;
	 	
	 	 $.ajax({
	        url: url,
	        type: "GET",
	        dataType: "json",
	        success: function (results) {
	                if(results){
	                    if(results.errorCode == 'SUCCESS'){
				 			displaySubSuccess('User Found');
				 			document.getElementById("createUserButton").style.display='none';
				 		}  
	            	}
	        },
	        
	        // Error occured on server 
	        error: function (xhr, ajaxOptions, thrownError) {
	        	var response = JSON.parse(xhr.responseText);
	        	displaySubError(getErrorDesription(response));
	        	// Make Create User button visible
				document.getElementById("createUserButton").style.display='';
	        }
	    });
	}
	
	function getActionLink(e){
		// If no Subscription is selected then no action can be performed on access
		var subscription = document.getElementById('firmSubscription');
		if(subscription.value == '0'){
			return '';
		}
		var contents = '';
		if(e.subscriptionAction == 'Disable'){
			// Disable Link
				contents = contents + 
					'<span><a class="cancelSubscription" style="cursor:pointer;" onclick="confrimUserAccessAction(\'' + e.uid + '\', \'' + e.subscriptionAction + '\', \'Are you sure you want to Disable the User Subscription ?\'); return false;"><img src="resources/images/disable.png" alt="Disable Subscription" title="Disable Subscription"></a></span>';
		} else if (e.subscriptionAction == 'Enable'){
			// Enable Link
			contents = contents + 
				'<span><a class="enableAccess" style="cursor:pointer;" onclick="confrimUserAccessAction(\'' + e.uid + '\', \'' + e.subscriptionAction + '\', \'Are you sure you want to Enable the User Subscription ?\'); return false;"><img src="resources/images/accept.png" alt="Enable Subscription" title="Enable Subscription"></a></span>';																					
		} 
		if(e.removable){
			// add remove Link
			contents = contents + 
				'<span><a class="removeAccess" style="cursor:pointer;" onclick="confrimUserAccessAction(\'' + e.uid + '\', \'Remove\', \'Are you sure you want to Remove the User Subscription ?\'); return false;"><img src="resources/images/delete.png" alt="Remove Subscription" title="Remove Subscription"></a></span>';
		}
		if(e.userLocked){
			contents = contents + '<span><a style="cursor:pointer;" onclick="confrimUserAccessAction(\'' + e.uid + '\', \'Unlock\', \'Are you sure you want to Unlock the User ' + e.username + '?\'); return false;"><img src="resources/images/unlockuser.png" alt="Unlock User" title="Unlock User"></a></span>';
		} else {
			contents = contents + '<span><a style="cursor:pointer;" onclick="confrimUserAccessAction(\'' + e.uid + '\', \'Lock\', \'Are you sure you want to Lock the User ' + e.username + '?\'); return false;"><img src="resources/images/lockuser.png" alt="Lock User" title="Lock User"></a></span>';		
		}
		return contents;
	}

 	function confrimUserAccessAction(uid, action, message){
		// Find the confirm dialog form and set the row id
		// Save the uid of a current row as it won't be available when confirm dialog takes the control.
 		var confirmBoxElem =  document.forms['ConfirmDialogForm'];
 		confirmBoxElem.elements['key'].value = uid;
 		confirmBoxElem.elements['action'].value = action;
 		
 		//Set the confirm message on confirm dialog window
 		var confirmMsgElem = document.getElementById('confirmMessage'); 
		confirmMsgElem.innerHTML = message; 
		
		// Disable the previous validation errors
		var confirmKendoWindow =  $('#confirmWindow').data('kendoWindow');
		confirmKendoWindow.element.find("span.k-tooltip-validation").hide();
		// Show the confirmation dialog
 		confirmKendoWindow.open().center(); 
	 }

	$(document).ready(function(){
		// Select Subscripton Chnage Event  	
		$("#firmSubscription").change(function () {
					var grid = $('#firmUserGrid').data('kendoGrid');
					grid.dataSource.read();
					displaySuccessMessage('');
	    });
	});
	


	// add user
	 function addFirmUser(data){
	 	var url = "addFirmUser.admin?adminUserName=${adminUserName}";
	 	
	 	var formElem = $('#addUserForm');
	 	var serializedData = formElem.serialize();
	 	
	 	 $.ajax({
	        url: url,
	        type: "POST",
	        dataType: "json",
	        data: serializedData,
	        success: function (results) {
	                if(results){
	                    if(results.errorCode == 'SUCCESS'){
				 			// Add a row to the grid
							addUserToGrid(results);
							resetAddUserFields();
							
							// Display Success message
				 			displaySuccessMessage(getErrorDesription(results));
				 		}  else {
				 			// There were errors on server side display it
				 			displayAddUserErrors(results);
				 		}
	            	}
					// Close the window, job is done 			
					var kw =  $('#addUserWindow').data('kendoWindow');
					kw.close();
	        },
	        
	        // Error occured on server 
	        error: function (xhr, ajaxOptions, thrownError) {
	        	var response = JSON.parse(xhr.responseText);
	        	displayAddUserErrors(response);
	        }
	    });
	 }
	 
	
	 // Add user to the grid
	 function addUserToGrid(results){
			var grid = $('#firmUserGrid').data('kendoGrid');
			grid.dataSource.read();
	 }
	

	//Get the subscriptions
	function getAdminSubscriptions(){
		var subscriptions = new Array();
		var i = 0;
		<#if subscriptions?has_content>
		        <#foreach subscription in subscriptions>
		        		var subscription = new Object();
		               <#if (subscription?has_content)>
		               		subscription.subscription = '${subscription.subscription}';
		               		subscription.accessId= '${subscription.accessId}';
		               		subscriptions[i] = subscription;
		               		i = i + 1;
					  </#if>
					  
		        </#foreach>
		</#if>
		return subscriptions;
	}

	function onChange(e) {
		var data = this.dataItem(this.select());
	}


	
 
 	// Find a user in Grid 
	 function findUserInGrid(username){
	 	var grid = $("#firmUserGrid").data("kendoGrid");       
	    var data = grid.dataSource.data();
	    var totalNumber = data.length;
	
	    for(var i = 0; i<totalNumber; i++) {
	        var user = data[i];
	        if(user.username == username){
	        	return user;
	        }
	    }
	 }

 
	function refreshGrid(){
		var grid = $('#firmUserGrid').data('kendoGrid');
		grid.refresh();
	}
	
	
	// Remove the Subscription
	 function callRemoveAccessService(user){
	 	var url = "removeFirmUserAccess.admin?adminUserName=${adminUserName}";
	 	
	 	// Get the comments from form
	 	var confirmBoxElem =  document.forms['ConfirmDialogForm'];
	 	var comments = confirmBoxElem.elements['comments'].value;

	 	url = url + "&firmUserName=" + user.username  +
	 				"&userAccessId=" + user.userAccessId +  
	 				"&comments=" + comments;
	 	 $.ajax({
	        url: url,
	        type: "POST",
	        dataType: "json",
	        success: function (results) {
	                if(results){
	                    if(results.errorCode == 'SUCCESS'){
				 			// Delete the row from grid
	            			$('#firmUserGrid').data("kendoGrid").dataSource.remove(user);
				 			displaySuccessMessage('Subscription Removed Successfully');
				 		} 
	            	}
	            	// Close the window, job is done
	            	onConfirmClose();
					var kw =  $('#confirmWindow').data('kendoWindow');
					kw.close();
	            	
	        },
	        error: function (xhr, ajaxOptions, thrownError) {
            	// Close the window, job is done 
            	onConfirmClose();			
				var kw =  $('#confirmWindow').data('kendoWindow');
				kw.close();
	        	var response = JSON.parse(xhr.responseText);
	        	displayErrorMessage(getErrorDesription(response));
	        }
	    });
	 }
	
	// Enable/Disable the user	 
	 function callEnableDisableSubscriptionService(user, row, isEnable){
	 	var url = "enableDisableFirmUserAccess.admin?adminUserName=${adminUserName}";

	 	// Get the Comments from form
	 	var confirmBoxElem =  document.forms['ConfirmDialogForm'];
	 	var comments = confirmBoxElem.elements['comments'].value;

	 	url = url + "&firmUserName=" + user.username +
	 				"&userAccessId=" + user.userAccessId +  
	 				 "&isEnable=" + isEnable + 
	 				"&comments=" + comments  ;
	 	
	 	 $.ajax({
	        url: url,
	        type: "POST",
	        dataType: "json",
	        success: function (results) {
	                if(results){
	                    if(results.errorCode == 'SUCCESS'){
							var grid = $('#firmUserGrid').data('kendoGrid');
							grid.dataSource.read();
					 		if(!isEnable){
				 				displaySuccessMessage('Subscription Disabled Successfully');
				 			} else {
				 				displaySuccessMessage('Subscription Enabled Successfully');
				 			}
				 		} 
	            	}
	            	// Close the window, job is done 			
	            	onConfirmClose();
					var kw =  $('#confirmWindow').data('kendoWindow');
					kw.close();
	            	
	        },
	        error: function (xhr, ajaxOptions, thrownError) {
            	// Close the window, job is done 		
            	onConfirmClose();	
				var kw =  $('#confirmWindow').data('kendoWindow');
				kw.close();
	        	var response = JSON.parse(xhr.responseText);
	        	displayErrorMessage(getErrorDesription(response));
	        }
	    });
	 }
	 
	// Lock / Unlock  the user	 
	 function callLockUnlockUser(user, isLock){
	 	var url = "lockUnLockFirmUser.admin?adminUserName=${adminUserName}";

	 	// Get the Comments from form
	 	var confirmBoxElem =  document.forms['ConfirmDialogForm'];
	 	var comments = confirmBoxElem.elements['comments'].value;

	 	url = url + "&firmUserName=" + user.username +
	 				 "&isLock=" + isLock + 
	 				 "&nodeName=" + user.nodeName +
	 				"&comments=" + comments  ;
	 	
	 	 $.ajax({
	        url: url,
	        type: "POST",
	        dataType: "json",
	        success: function (results) {
	                if(results){
	                    if(results.errorCode == 'SUCCESS'){
							var grid = $('#firmUserGrid').data('kendoGrid');
							grid.dataSource.read();
					 		if(isLock){
				 				displaySuccessMessage('User Locked Successfully');
				 			} else {
				 				displaySuccessMessage('User Unlocked Successfully');
				 			}
				 		} 
	            	}
	            	// Close the window, job is done 			
	            	onConfirmClose();
					var kw =  $('#confirmWindow').data('kendoWindow');
					kw.close();
	            	
	        },
	        error: function (xhr, ajaxOptions, thrownError) {
            	// Close the window, job is done 		
            	onConfirmClose();	
				var kw =  $('#confirmWindow').data('kendoWindow');
				kw.close();
	        	var response = JSON.parse(xhr.responseText);
	        	displayErrorMessage(getErrorDesription(response));
	        }
	    });
	 }

	
	function displayErrorMessage(message){
		var statusElem = document.getElementById('errorStatusLabel');
		var statusLabelText = '<font color="red" size=4>' + message + '</font>';
		statusElem.innerHTML  = statusLabelText;
	}
	
	function displaySuccessMessage(message){
		var statusElem = document.getElementById('errorStatusLabel');
		var statusLabelText = '<font color="green" size=4>' + message + '</font>';
		statusElem.innerHTML  = statusLabelText;
	}
	
	// Display Error in Add User Window
	function displayAddUserErrors(results){
		var errorString = '';
		for(var k in results.errors){
			errorString = errorString + results.errors[k] + '</br>';
		}
		errorString = errorString + '</br>';
		var errorLabelText = '<font color="red" size=2>' + errorString + '</font>';
		setAddErrorMessage(errorLabelText);
	}
	
	function getErrorDesription(results){
		var errorString = '';
		for(var k in results.errors){
			errorString = errorString + results.errors[k] + '</br>';
		}
		errorString = errorString + '</br>';
		return errorString;
	}
	
	function onAddUserClose(){
		resetAddUserFields();
		setAddErrorMessage('');
	}
	
	function onAddSubToUserClose(){
		resetAddSubFields();
		setAddSubErrorMessage('');
	}

	function onConfirmClose(){
	 	var confirmBoxElem =  document.forms['ConfirmDialogForm'];
		confirmBoxElem.elements['comments'].value = '';
	}
	
	
	
	// Resent add user form fields
	function resetAddSubFields(){
		var addSubFormObject = document.forms['addSubToUserForm'];
		addSubFormObject.elements["username"].value = '';
		addSubFormObject.elements["addSubToUserSelect"].value = '';
	}

	// Resent add user form fields
	function resetAddUserFields(){
		addUserFormObject = document.forms['addUserForm'];
		addUserFormObject.elements["username"].value = '';
		addUserFormObject.elements["firstName"].value = '';
		addUserFormObject.elements["lastName"].value = '';
		addUserFormObject.elements["phone"].value = '';
		addUserFormObject.elements["addSubscription"].value = '';
		addUserFormObject.elements["firmName"].value = '';
		<#if isFirmNumberRequired?has_content && isFirmNumberRequired>
			addUserFormObject.elements["firmNumber"].value = '';
		</#if>
		<#if isBarNumberRequired?has_content && isBarNumberRequired>
			addUserFormObject.elements["barNumber"].value = '';
		</#if>
	}

	function setAddSubErrorMessage(msg){
		errorElem = document.getElementById('addSubToUserErrorLabel');
		errorElem.innerHTML  = msg;
	}

	function setAddErrorMessage(msg){
		errorElem = document.getElementById('addUserErrorLabel');
		errorElem.innerHTML  = msg;
	}
	
	function displaySubSuccess(message){
		var statusElem = document.getElementById('addSubToUserErrorLabel');
		var statusLabelText = '<font color="green" size=2>' + message + '</font>';
		statusElem.innerHTML  = statusLabelText;
	}
	
	function displaySubError(message){
		var statusElem = document.getElementById('addSubToUserErrorLabel');
		var statusLabelText = '<font color="red" size=2>' + message + '</font>';
		statusElem.innerHTML  = statusLabelText;
	}
	
	function toCamelCase(str) {
		str = str.toLowerCase();
	    return str.replace(/(?:^|\s)\w/g, function(match) {
	        return match.toUpperCase();
	    });
    }	

</script>

</body>
</html>
