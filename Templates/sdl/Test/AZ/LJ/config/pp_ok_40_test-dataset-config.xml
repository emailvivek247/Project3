<?xml version="1.0" encoding="UTF-8"?>
<dataset name="Oklahoma - Protected Person 4.0 TEST" exportedBy="null" createdAt="Thu Mar 19 16:03:49 EDT 2015">
  <display-order>-10008</display-order>
  <description><![CDATA[Oklahoma - Protected Person 4.0 TEST]]></description>
  <index-dir>pp_ok_40_test</index-dir>
  <is-prefix-root-index-directory>true</is-prefix-root-index-directory>
  <use-server-db-connection>false</use-server-db-connection>
  <number-of-hours-before-deletion>6</number-of-hours-before-deletion>
  <work-directory>_work</work-directory>
  <temporary-index-minimal-merge-percentage>1.0</temporary-index-minimal-merge-percentage>
  <merge-hours enabled="false" begin="1" end="3"/>
  <fetcher-threads>1</fetcher-threads>
  <writer-threads>1</writer-threads>
  <index-max-size>100000.0</index-max-size>
  <list-fetch-size>10000</list-fetch-size>
  <schedules>
   <schedule id="0">
    <is-enabled>false</is-enabled>
    <is-interval>false</is-interval>
    <interval>1</interval>
    <cron-setting>3,8,13,18,23,28,33,38,45,48,53,58 6,7,8,9,10,11,12,13,14,15,16,17,18 * * ?</cron-setting>
    <indexing-mode>Incremental Indexing</indexing-mode>
   </schedule>
   <schedule id="1">
    <is-enabled>false</is-enabled>
    <is-interval>false</is-interval>
    <interval>5</interval>
    <cron-setting>41 6,11,17 * * ?</cron-setting>
    <indexing-mode>Re-create Index</indexing-mode>
   </schedule>
  </schedules>
  <language>Any</language>
  <analyzer-name>com.fdt.sdl.core.analyzer.NumberLowerCaseAnalyzer</analyzer-name>
  <data-source-type>0</data-source-type>
  <fetcher-configuration dir="null">
  </fetcher-configuration>
  <data-sources>
    <data-source>
      <name>default</name>
      <driver-directory-name>sqlserver</driver-directory-name>
      <jdbcdriver>com.microsoft.sqlserver.jdbc.SQLServerDriver</jdbcdriver>
      <db-url><![CDATA[4FC740FFB81F3935D54844BB9C59577DFB5158BA8D1428E0E6EB1B867DB87C3D6789BD777837B0E68EB3507A0B384C7BBC37BD3D818872C762BC3F8610EA6A20C50CB335A06DF8FA229F291782906832E8A6A480877E8EF3563EDCA0E95A9C406754D482952F5BFE7CC338288CF597F6]]></db-url>
      <db-username><![CDATA[]]></db-username>
      <db-password><![CDATA[]]></db-password>
      <dbcp-validation-query><![CDATA[
SELECT 1
  ]]></dbcp-validation-query>
    </data-source>
  </data-sources>
  <dataquery name="WorkingQueue" batch-size="128" is-skipping-null-parameters="false">
    <sql><![CDATA[
SELECT 
PERSON_ALIAS_ID, 
DATE_TIME_CREATED, 
DATE_TIME_MOD 
FROM ACM_PERSON
--WHERE PROTECTED_FLG = 'Y'
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_ATTORNEY)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_CLERK)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_COURTREPORTER)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_FIDUCIARY)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_INTERPRETER)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_JUDGE)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_ENFORCING_OFCR)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM AJM_INMATE)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_JUDICIALASSISTANT)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_BAILIFF)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_PROB_OFCR)
--AND PERSON_ALIAS_ID NOT IN (SELECT PERSON_ALIAS_ID FROM ACM_PROCESS_SERVER)
    ]]></sql>
    <column>
      <column-name>PERSON_ALIAS_ID</column-name>
      <display-name><![CDATA[PERSON_ALIAS_ID]]></display-name>
      <column-index>1</column-index>
      <column-type precision="19" scale="0">java.math.BigDecimal</column-type>
      <primary-key>true</primary-key>
      <index-field-type>Keyword</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>DATE_TIME_CREATED</column-name>
      <display-name><![CDATA[DATE_TIME_CREATED]]></display-name>
      <column-index>2</column-index>
      <column-type>java.sql.Timestamp</column-type>
      <index-field-type>KeywordDateHierarchical</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>DATE_TIME_MOD</column-name>
      <display-name><![CDATA[DATE_TIME_MOD]]></display-name>
      <column-index>3</column-index>
      <column-type>java.sql.Timestamp</column-type>
      <modified-date>true</modified-date>
      <index-field-type>KeywordDateHierarchical</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
  </dataquery>
  <dataquery name="Content" is-batch-needed="true" batch-size="500">
    <sql><![CDATA[
SELECT
ID AS PERSONID,
PERSON_ALIAS_ID, 
CASE WHEN LTRIM(RTRIM(REPLACE(FIRST_NAME, '-', ' '))) = '' THEN 'AMCADDBNULL' ELSE ISNULL(REPLACE(FIRST_NAME, '-', ' '), 'AMCADDBNULL') END AS FIRSTNAME, 
CASE WHEN LTRIM(RTRIM(REPLACE(FIRST_NAME, '-', ' '))) = '' THEN '|' ELSE ISNULL(REPLACE(FIRST_NAME, '-', ' '), '|') END AS FIRSTNAMELIKE, 
CASE WHEN LTRIM(RTRIM(REPLACE(LAST_NAME, '-', ' '))) = '' THEN 'AMCADDBNULL' ELSE ISNULL(REPLACE(LAST_NAME, '-', ' '), 'AMCADDBNULL') END AS LASTNAME, 
CASE WHEN LTRIM(RTRIM(REPLACE(LAST_NAME, '-', ' '))) = '' THEN '|' ELSE ISNULL(REPLACE(LAST_NAME, '-', ' '), '|') END AS LASTNAMELIKE, 
CASE WHEN LTRIM(RTRIM(REPLACE(LAST_NAME, '-', ' '))) = '' THEN '|' ELSE ISNULL(REPLACE(LAST_NAME, '-', ' '), '|') END AS LASTNAMESOUNDEX, 
CASE WHEN LTRIM(RTRIM(REPLACE(MIDDLE_NAME, '-', ' '))) = '' THEN 'AMCADDBNULL' ELSE ISNULL(REPLACE(MIDDLE_NAME, '-', ' '), 'AMCADDBNULL') END AS MIDDLENAME, 
CASE WHEN LTRIM(RTRIM(REPLACE(MIDDLE_NAME, '-', ' '))) = '' THEN '|' ELSE ISNULL(REPLACE(MIDDLE_NAME, '-', ' '), '|') END AS MIDDLENAMELIKE, 
CASE WHEN LTRIM(RTRIM(REPLACE(SUFFIX_NAME, '-', ' '))) = '' THEN 'AMCADDBNULL' ELSE ISNULL(REPLACE(SUFFIX_NAME, '-', ' '), 'AMCADDBNULL') END AS SUFFIXNAME
FROM ACM_PERSON_NAME
WHERE PERSON_ALIAS_ID IN (?)
    ]]></sql>
    <parameter>
      <name>PERSON_ALIAS_ID</name>
      <index>1</index>
      <type>java.math.BigDecimal</type>
      <value>10874</value>
    </parameter>
    <column>
      <column-name>PERSONID</column-name>
      <display-name><![CDATA[PERSONID]]></display-name>
      <column-index>1</column-index>
      <column-type precision="19" scale="0">java.math.BigDecimal</column-type>
      <index-field-type>Keyword</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>PERSON_ALIAS_ID</column-name>
      <display-name><![CDATA[PERSON_ALIAS_ID]]></display-name>
      <column-index>2</column-index>
      <column-type precision="19" scale="0">java.math.BigDecimal</column-type>
      <index-field-type></index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>FIRSTNAME</column-name>
      <display-name><![CDATA[FIRSTNAME]]></display-name>
      <column-index>3</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>FIRSTNAMELIKE</column-name>
      <display-name><![CDATA[FIRSTNAMELIKE]]></display-name>
      <column-index>4</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Text</index-field-type>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>LASTNAME</column-name>
      <display-name><![CDATA[LASTNAME]]></display-name>
      <column-index>5</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>LASTNAMELIKE</column-name>
      <display-name><![CDATA[LASTNAMELIKE]]></display-name>
      <column-index>6</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Text</index-field-type>
      <analyzer-name>com.fdt.sdl.core.analyzer.OneWordNumberLowerCaseAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>LASTNAMESOUNDEX</column-name>
      <display-name><![CDATA[LASTNAMESOUNDEX]]></display-name>
      <column-index>7</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Text</index-field-type>
      <is-searchable search-weight="-1.0">false</is-searchable>
      <analyzer-name>com.fdt.sdl.core.analyzer.DoubleMetaphoneAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>MIDDLENAME</column-name>
      <display-name><![CDATA[MIDDLENAME]]></display-name>
      <column-index>8</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>MIDDLENAMELIKE</column-name>
      <display-name><![CDATA[MIDDLENAMELIKE]]></display-name>
      <column-index>9</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Text</index-field-type>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>SUFFIXNAME</column-name>
      <display-name><![CDATA[SUFFIXNAME]]></display-name>
      <column-index>10</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
  </dataquery>
  <dataquery name="Content" is-batch-needed="true" batch-size="500">
    <sql><![CDATA[
SELECT 
D.DRIVERS_LICENSEID,
D.PERSON_ALIAS_ID, 
CASE WHEN LTRIM(RTRIM(REPLACE(D.LICENSE_NUM, '-', ''))) = '' THEN 'AMCADDBNULL' ELSE ISNULL(REPLACE(D.LICENSE_NUM, '-', ''), 'AMCADDBNULL') END AS DLNUMBER, 
CASE WHEN LTRIM(RTRIM(S.STATE_CD)) = '' THEN 'AMCADDBNULL' ELSE ISNULL(S.STATE_CD, 'AMCADDBNULL') END AS DLSTATE
FROM dbo.ACM_DRIVERSLICENSE D LEFT OUTER JOIN dbo.ACM_STATE S 
ON D.STATE_ID = S.STATE_ID
WHERE PERSON_ALIAS_ID IN (?)
    ]]></sql>
    <parameter>
      <name>PERSON_ALIAS_ID</name>
      <index>1</index>
      <type>java.math.BigDecimal</type>
      <value>10874</value>
    </parameter>
    <column>
      <column-name>DRIVERS_LICENSEID</column-name>
      <display-name><![CDATA[DRIVERS_LICENSEID]]></display-name>
      <column-index>1</column-index>
      <column-type precision="10" scale="0">java.math.BigDecimal</column-type>
      <index-field-type>Keyword</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>PERSON_ALIAS_ID</column-name>
      <display-name><![CDATA[PERSON_ALIAS_ID]]></display-name>
      <column-index>2</column-index>
      <column-type precision="19" scale="0">java.math.BigDecimal</column-type>
      <index-field-type></index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>DLNUMBER</column-name>
      <display-name><![CDATA[DLNUMBER]]></display-name>
      <column-index>3</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>DLSTATE</column-name>
      <display-name><![CDATA[DLSTATE]]></display-name>
      <column-index>4</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
  </dataquery>
  <dataquery name="Content" is-batch-needed="true" batch-size="500">
    <sql><![CDATA[
SELECT 
PH.ID AS PHYSICALID,
PT.PERSON_ALIAS_ID, 
CASE WHEN LTRIM(RTRIM(CONVERT(VARCHAR(20), PA.DOB, 112))) = '' THEN 'AMCADDBNULL' ELSE ISNULL(CONVERT(VARCHAR(20), PA.DOB, 112), 'AMCADDBNULL') END AS DOB,
CASE WHEN LTRIM(RTRIM(PH.SEX)) = '' THEN 'AMCADDBNULL' ELSE ISNULL(PH.SEX, 'AMCADDBNULL') END AS GENDER
FROM ACM_PHYSICAL_CHARS PH INNER JOIN ACM_PARTY PT ON 
PH.ID = PT.PHYSICAL_CHARS_ID
left join ACM_PERSON_AGE PA
ON PA.PERSON_ALIAS_ID = PT.PERSON_AGE_ID
WHERE  PT.PERSON_ALIAS_ID IN (?)
    ]]></sql>
    <parameter>
      <name>PERSON_ALIAS_ID</name>
      <index>1</index>
      <type>java.math.BigDecimal</type>
      <value>10874</value>
    </parameter>
    <column>
      <column-name>PHYSICALID</column-name>
      <display-name><![CDATA[PHYSICALID]]></display-name>
      <column-index>1</column-index>
      <column-type precision="10" scale="0">java.math.BigDecimal</column-type>
      <index-field-type>Keyword</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>PERSON_ALIAS_ID</column-name>
      <display-name><![CDATA[PERSON_ALIAS_ID]]></display-name>
      <column-index>2</column-index>
      <column-type precision="19" scale="0">java.math.BigDecimal</column-type>
      <primary-key>true</primary-key>
      <index-field-type>Keyword</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>DOB</column-name>
      <display-name><![CDATA[DOB]]></display-name>
      <column-index>3</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>GENDER</column-name>
      <display-name><![CDATA[GENDER]]></display-name>
      <column-index>4</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
  </dataquery>
  <dataquery name="Content" is-batch-needed="true" batch-size="500">
    <sql><![CDATA[
SELECT 
I.ID AS IDENTITYID,
P.PERSON_ALIAS_ID, 
CASE WHEN LTRIM(RTRIM(REPLACE(I.IDENTITY_VALUE, '-', ''))) = '' THEN 'AMCADDBNULL' ELSE ISNULL(REPLACE(I.IDENTITY_VALUE, '-', ''), 'AMCADDBNULL') END AS SSN
FROM ACM_PERSON_IDENTITY I INNER JOIN ACM_PERSON P
ON I.PERSON_ALIAS_ID = P.PERSON_ALIAS_ID 
INNER JOIN dbo.ACM_IDENTITY_TYP T ON I.IDENTITY_TYP_ID = T.ID
WHERE T.IDENTITY_CD = 'SSN'
AND P.PERSON_ALIAS_ID IN (?)
    ]]></sql>
    <parameter>
      <name>PERSON_ALIAS_ID</name>
      <index>1</index>
      <type>java.math.BigDecimal</type>
      <value>10874</value>
    </parameter>
    <column>
      <column-name>IDENTITYID</column-name>
      <display-name><![CDATA[IDENTITYID]]></display-name>
      <column-index>1</column-index>
      <column-type precision="19" scale="0">java.math.BigDecimal</column-type>
      <index-field-type>Keyword</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>PERSON_ALIAS_ID</column-name>
      <display-name><![CDATA[PERSON_ALIAS_ID]]></display-name>
      <column-index>2</column-index>
      <column-type precision="19" scale="0">java.math.BigDecimal</column-type>
      <index-field-type></index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>SSN</column-name>
      <display-name><![CDATA[SSN]]></display-name>
      <column-index>3</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
  </dataquery>
  <dataquery name="Content" is-batch-needed="true" batch-size="500">
    <sql><![CDATA[
SELECT 
ID AS ADDRESSID,
PERSON_ALIAS_ID, 
ISNULL(ISNULL(REPLACE(ADDRESS_LINE1_TXT, ' ',''), '') + 
ISNULL(REPLACE(ADDRESS_LINE2_TXT, ' ',''), '') + 
ISNULL(REPLACE(CITY_NAME, ' ', ''), '') + 
ISNULL(REPLACE(STATE_NAME, ' ', ''),''), '') AS ADDRESS
FROM SW_ACM_V_ADDRESS
WHERE PERSON_ALIAS_ID IN (?)
    ]]></sql>
    <parameter>
      <name>PERSON_ALIAS_ID</name>
      <index>1</index>
      <type>java.math.BigDecimal</type>
      <value>10874</value>
    </parameter>
    <column>
      <column-name>ADDRESSID</column-name>
      <display-name><![CDATA[ADDRESSID]]></display-name>
      <column-index>1</column-index>
      <column-type precision="10" scale="0">java.math.BigDecimal</column-type>
      <index-field-type>Keyword</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>PERSON_ALIAS_ID</column-name>
      <display-name><![CDATA[PERSON_ALIAS_ID]]></display-name>
      <column-index>2</column-index>
      <column-type precision="19" scale="0">java.math.BigDecimal</column-type>
      <index-field-type></index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>ADDRESS</column-name>
      <display-name><![CDATA[ADDRESS]]></display-name>
      <column-index>3</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keyword</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
  </dataquery>
  <dataquery name="Content" is-batch-needed="true" batch-size="500">
    <sql><![CDATA[
SELECT  
             VI.VEHICLEINFO_ID AS 'PLATEID'
            ,VI.OWNER_PERSON_ALIAS_ID AS 'PERSON_ALIAS_ID'
            ,CASE WHEN LTRIM(RTRIM(VI.LICENSE_PLATE_NUM)) = '' THEN '|' ELSE ISNULL(VI.LICENSE_PLATE_NUM, '|') END AS 'DLPLATE' 
            ,CASE WHEN LTRIM(RTRIM(S.STATE_CD)) = '' THEN '|' ELSE ISNULL(S.STATE_CD, '|') END AS 'DLPLATESTATE'
FROM dbo.ACM_VEHICLEINFO VI LEFT OUTER JOIN dbo.ACM_STATE S 
ON VI.STATE_ID = S.STATE_ID
WHERE VI.OWNER_PERSON_ALIAS_ID IN (?)
    ]]></sql>
    <parameter>
      <name>PERSON_ALIAS_ID</name>
      <index>1</index>
      <type>java.math.BigDecimal</type>
      <value>10874</value>
    </parameter>
    <column>
      <column-name>PLATEID</column-name>
      <display-name><![CDATA[PLATEID]]></display-name>
      <column-index>1</column-index>
      <column-type precision="10" scale="0">java.math.BigDecimal</column-type>
      <index-field-type>Keyword</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>PERSON_ALIAS_ID</column-name>
      <display-name><![CDATA[PERSON_ALIAS_ID]]></display-name>
      <column-index>2</column-index>
      <column-type precision="19" scale="0">java.math.BigDecimal</column-type>
      <index-field-type></index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>DLPLATE</column-name>
      <display-name><![CDATA[DLPLATE]]></display-name>
      <column-index>3</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
    <column>
      <column-name>DLPLATESTATE</column-name>
      <display-name><![CDATA[DLPLATESTATE]]></display-name>
      <column-index>4</column-index>
      <column-type>java.lang.String</column-type>
      <index-field-type>Keywords</index-field-type>
      <is-searchable search-weight="3.0">true</is-searchable>
      <analyzer-name>org.apache.lucene.analysis.WhitespaceAnalyzer</analyzer-name>
      <tag><![CDATA[]]></tag>
    </column>
  </dataquery>
  <dataquery name="Deletion" is-delete-only="true">
    <sql><![CDATA[
SELECT PK_KEY FROM ROAM_TRACK
WHERE DATE_TIME_MOD > GETDATE() - 10
AND DML_TYP IN ('D', 'U')
UNION ALL
SELECT PK_KEY FROM ROAM_TRACK RT INNER JOIN ACM_PERSON P
ON RT.PK_KEY = P.PERSON_ALIAS_ID
WHERE RT.DATE_TIME_MOD > GETDATE() - 10
AND P.PROTECTED_FLG = 'N'
    ]]></sql>
  </dataquery>
  <dataquery name="Incremental">
    <sql><![CDATA[
SELECT 
PERSON_ALIAS_ID,
P.DATE_TIME_CREATED, 
P.DATE_TIME_MOD 
FROM ROAM_TRACK RT INNER JOIN ACM_PERSON P 
ON RT.PK_KEY = P.PERSON_ALIAS_ID
WHERE RT.DATE_TIME_MOD > ?
AND RT.DML_TYP IN ('I', 'U') 
AND P.PROTECTED_FLG = 'Y'
    ]]></sql>
  </dataquery>
  <default-template>Main</default-template>
  <tablet-template>Main</tablet-template>
  <mobile-template>Main</mobile-template>
  <searcher-max-active>8</searcher-max-active>
  <searcher-when-exhausted>1</searcher-when-exhausted>
  <searcher-max-wait>10000</searcher-max-wait>
  <searcher-max-idle>7</searcher-max-idle>
  <is-in-memory-search>false</is-in-memory-search>
  <max-open-files>1200</max-open-files>
  <jvm-max-heap-size>4096</jvm-max-heap-size>
  <document-buffer-size-mb>2048</document-buffer-size-mb>
  <is-wildcard-allowed>true</is-wildcard-allowed>
  <min-wildcard-prefix-length>0</min-wildcard-prefix-length>
  <allowed-ip-list>*</allowed-ip-list>
  <date-weight-formula>
    <time-weight time="600" weight="12.0"/>
    <time-weight time="1800" weight="11.0"/>
    <time-weight time="3600" weight="10.0"/>
    <time-weight time="21600" weight="9.0"/>
    <time-weight time="43200" weight="8.0"/>
    <time-weight time="86400" weight="7.0"/>
    <time-weight time="1296000" weight="6.0"/>
    <time-weight time="2678400" weight="5.0"/>
    <time-weight time="5356800" weight="4.0"/>
    <time-weight time="8035200" weight="3.0"/>
    <time-weight time="16070400" weight="2.0"/>
    <time-weight time="32140800" weight="1.3"/>
    <time-weight time="64281600" weight="1.2"/>
    <time-weight time="96422400" weight="1.1"/>
    <time-weight time="128563200" weight="1.05"/>
    <time-weight time="160704000" weight="1.04"/>
    <time-weight time="192844800" weight="1.03"/>
    <time-weight time="224985600" weight="1.02"/>
    <time-weight time="321408000" weight="1.01"/>
  </date-weight-formula>
  <spell-checking enabled="true"></spell-checking>
</dataset>
