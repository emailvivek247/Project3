<#assign num_pages = (searchResult.total/searchResult.length)?int>
<#if num_pages*searchResult.length < searchResult.total>
 <#assign num_pages = num_pages + 1>
</#if>
<#assign current_page_index = (searchResult.start/searchResult.length)?int + 1>

<#assign startItemIndex = (current_page_index-1)*searchResult.length + 1>
<#assign endItemIndex = current_page_index*searchResult.length>
<#if (endItemIndex>searchResult.total)>
 <#assign endItemIndex = searchResult.total>
</#if>
  <TotalResults>${total}</TotalResults>
  <TotalPages>${num_pages}</TotalPages>
  <CurrentPage>${current_page_index}</CurrentPage>
  <PageLength>${length}</PageLength>
  <StartItemIndex>${startItemIndex}</StartItemIndex>
  <EndItemIndex>${endItemIndex}</EndItemIndex>
  <RequestProcessingTime>${searchTime}</RequestProcessingTime>
  <QueryString><![CDATA[${q}]]></QueryString>
<Columns>
  <Column>VER</Column>
  <Column>STATUS</Column>
  <Column>DATERECDISPLAY</Column>
  <Column>NAME</Column>
  <Column>PARTYROLE</Column>
  <Column>DESIGSTATUS</Column>
  <Column>OTHERNAME</Column>
  <Column>OTHERDESIGSTATUS</Column>
  <Column>BOOKSHORT</Column>
  <Column>BOOKPAGE</Column>
  <Column>OTHERROLENAME</Column>
  <Column>BOOK</Column>
  <Column>REMARKS</Column>
  <Column>CONSIDERATION</Column>
  <Column>TYPE</Column>
  <Column>PAGE</Column>
  <Column>MARGINALS</Column>
  <Column>INSTRUMENT</Column>
  <Column>BACKFILENUM</Column>
  <Column>OFFLINEIMAGE</Column>
  <Column>ROLE</Column>
</Columns>
<Items>
  <xs:schema id="Items" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xs:element name="Items" msdata:IsDataSet="true">
      <xs:complexType>
        <xs:choice maxOccurs="unbounded">
          <xs:element name="Item">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="VER" type="xs:string" minOccurs="0" />
                <xs:element name="STATUS" type="xs:string" minOccurs="0" />
                <xs:element name="DATERECDISPLAY" type="xs:string" minOccurs="0" />
                <xs:element name="NAME" type="xs:string" minOccurs="0" />
                <xs:element name="PARTYROLE" type="xs:string" minOccurs="0" />
                <xs:element name="DESIGSTATUS" type="xs:string" minOccurs="0" />
                <xs:element name="OTHERNAME" type="xs:string" minOccurs="0" />
                <xs:element name="OTHERDESIGSTATUS" type="xs:string" minOccurs="0" />
                <xs:element name="BOOKSHORT" type="xs:string" minOccurs="0" />
                <xs:element name="BOOKPAGE" type="xs:string" minOccurs="0" />
                <xs:element name="OTHERROLENAME" type="xs:string" minOccurs="0" />
                <xs:element name="BOOK" type="xs:string" minOccurs="0" />
                <xs:element name="REMARKS" type="xs:string" minOccurs="0" />
                <xs:element name="CONSIDERATION" type="xs:string" minOccurs="0" />
                <xs:element name="TYPE" type="xs:string" minOccurs="0" />
                <xs:element name="PAGE" type="xs:string" minOccurs="0" />
                <xs:element name="MARGINALS" type="xs:string" minOccurs="0" />
                <xs:element name="INSTRUMENT" type="xs:string" minOccurs="0" />
                <xs:element name="BACKFILENUM" type="xs:string" minOccurs="0" />
                <xs:element name="OFFLINEIMAGE" type="xs:string" minOccurs="0" />
                <xs:element name="ROLE" type="xs:string" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
    </xs:element>
  </xs:schema>
  <#if searchResult.docs?has_content>
  <#foreach doc in searchResult.docs>
   <Item
   <#if doc.get("VER")?has_content> A = '${doc.get("VER")?trim}>'</#if>
 />
  </#foreach>
  </#if>
</Items>