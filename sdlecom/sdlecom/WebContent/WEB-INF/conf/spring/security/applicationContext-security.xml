<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <import resource="DB-AuthProvider.xml" />

    <bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map request-matcher="ant">
            <security:filter-chain pattern="/public*.admin"                 filters="none" />           
            <security:filter-chain pattern="/resources/**"                  filters="none" />
            <security:filter-chain pattern="/logout.admin"                  filters="logoutFilter" />
            <!--  START OF INDEXING RELATED FILTERS -->         
            <security:filter-chain pattern="/admin/**"                      filters="none" />
            <security:filter-chain pattern="/searchProtocolBuffer.do"       filters="none" />
            <security:filter-chain pattern="/suggest.do"                    filters="none" />
            <!--  END OF INDEXING RELATED FILTERS -->
            
            <security:filter-chain pattern="/**" filters="securityContextFilter, authenticationFilter, servletApiFilter, 
                sessionMgmtFilter, concurrencySessionFilter, exceptionTranslator, filterSecurityInterceptor" />
        </security:filter-chain-map>
    </bean>

    <bean id="securityContextFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
        <property name="securityContextRepository" ref="securityContextRepository" />
    </bean>

    <bean id="securityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />

    <!-- Logout Filter Start -->
    
    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="/publicLogin.admin" />
        <constructor-arg>
            <list>
                <ref  bean="securityContextLogoutHandler"/>
                <ref bean="cookieClearingLogoutHandler"/>
            </list>
        </constructor-arg>
        <property name="filterProcessesUrl"  value="/logout.admin" />
    </bean>

    <bean id="securityContextLogoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
    
    <bean id="cookieClearingLogoutHandler"  class="org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler" >
        <constructor-arg value="JSESSIONID" />
    </bean>
    
    <!-- Logout Filter End -->

    <bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationSuccessHandler" ref="sDLSavedRequestAwareAuthenticationSuccessHandler" />
        <property name="authenticationFailureHandler">
            <bean class="com.fdt.security.ui.spring.SDLSimpleUrlAuthenticationFailureHandler">
                <property name="defaultFailureUrl" value="/publicLogin.admin" />
                <property name="useForward" value="true" />
            </bean>
        </property>
        <property name="sessionAuthenticationStrategy" ref="sessionControlStrategy" />
    </bean>

    <bean id="sDLSavedRequestAwareAuthenticationSuccessHandler" class="com.fdt.security.spring.SDLSavedRequestAwareAuthenticationSuccessHandler">
        <property name="defaultTargetUrl" value="/checkSubscription.admin" />
        <property name="alwaysUseDefaultTargetUrl" value="true" />
    </bean>


    <bean id="sessionControlStrategy" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy" >
        <constructor-arg ref="sessionRegistry" />
        <property name="maximumSessions" value="1" />
    </bean>    

    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

    <bean id="concurrencySessionFilter"  class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <property name="sessionRegistry" ref="sessionRegistry" />
        <property name="expiredUrl" value="/publicMoreThanOneSessionForTheSameUser.admin" />
    </bean>

    <bean id="requestCacheFilter" class="org.springframework.security.web.savedrequest.RequestCacheAwareFilter" />

    <bean id="servletApiFilter" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter" />

    <bean id="exceptionTranslator" class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <property name="authenticationEntryPoint">
            <bean class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
                <property name="loginFormUrl" value="/publicLogin.admin" />
            </bean>
        </property>
        <property name="accessDeniedHandler">
            <bean class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
                <property name="errorPage" value="/accessDenied.admin" />
            </bean>
        </property>
    </bean>

    <bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="securityMetadataSource">
            <security:filter-security-metadata-source use-expressions="true">
                <security:intercept-url pattern="/*.do"       access="isAuthenticated()" />        
                <security:intercept-url pattern="/*.admin"    access="isAuthenticated()" />
            </security:filter-security-metadata-source>
        </property>
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="accessDecisionManager" ref="accessDecisionManager" />
    </bean>

    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
       <property name="clearExtraInformation" value="false" />
       <property name="eraseCredentialsAfterAuthentication" value="false" />
       <property name="providers">
            <list>
                <beans:ref local="databaseAuthenticationProvider" />
            </list>
        </property>
    </bean>

    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <ref local="webExpressionVoter" />
            </list>
        </property>
    </bean>

     <bean id="webExpressionVoter" class="org.springframework.security.web.access.expression.WebExpressionVoter">
        <property name="expressionHandler">
            <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
        </property>
    </bean>
<!--

    <bean class="org.springframework.security.access.vote.AuthenticatedVoter" />

    <bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter" >
            <property name="rolePrefix" value="" />
    </bean>

    <bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter" >
    <constructor-arg ref="roleHierarchy" />
        <property name="rolePrefix" value="" />
    </bean>
    
 -->    
    
    <bean id="sessionMgmtFilter" class="org.springframework.security.web.session.SessionManagementFilter">
        <constructor-arg ref="securityContextRepository" />
    </bean>
    
<!-- 
    <bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <beans:property name="hierarchy">
            <beans:value>
                DALLAS_ADMIN  > DALLAS_SEARCH
                DALLAS_SEARCH > DALLAS_FREE_SEARCH
            </beans:value>
            <beans:value>
                DALLAS_ADMIN  > DALLAS_SEARCH
                DALLAS_SEARCH > DALLAS_FREE_SEARCH
                
            </beans:value>
        </beans:property>
    </bean>
 -->
</beans>