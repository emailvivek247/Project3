<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                                   "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

<sql-query name="GET_PAID_SUB_UNPAID_BY_USER" callable="true">
    <![CDATA[
        {call SP_RECUR_GET_RECUR_SUB_UNPAID_BYUSER (:userName, :nodeName) }
    ]]>
</sql-query>

<sql-query name="GET_CURRENT_SUBSCRIPTIONS_FOR_USER">
    <![CDATA[
    SELECT
        AU.ID AS AU_ID,
        AUA.ACCESS_ID AS AUA_ACCESS_ID,
        CL.Category AS CL_Category,
        S.ID AS S_ID
    FROM
        AUTH_USERS AU
        INNER JOIN AUTH_USERS_ACCESS AUA ON AU.ID = AUA.User_Id
        INNER JOIN AUTH_ACCESS AA ON AUA.Access_Id = AA.ID
        LEFT OUTER JOIN ECOMM_SITE_ACCESS ESA ON AA.ID = ESA.ACCESS_ID
        LEFT OUTER JOIN ECOMM_SITE S ON ESA.SITE_ID= S.ID
        LEFT OUTER JOIN ECOMM_SUBSCRIPTIONFEE FEE ON ESA.ID = FEE.SITEACCESS_ID
        LEFT OUTER JOIN CODELOOKUP CL ON FEE.SUBSCRIPTION_TYP_ID = CL.ID
    WHERE
        AU.EMAIL_ID = :userName AND
        AUA.IS_DELETED = 'N'
    ]]>
</sql-query>

<sql-query name="GET_USERPAYMENT_INFO" callable="true">
    <![CDATA[ {call SP_USER_GET_PAYMENT_INFO (:username, :nodeName) } ]]>
</sql-query>

<sql-query name="GET_RECUR_PROFILES_FOR_VERIFICATION">
    <![CDATA[
         SELECT
            USERS.ID AS USERS_ID,
            ACCESS.ID AS ACCESS_ID,
            USERACCESS.ID AS USERACCESS_ID,
            ACCOUNT.ID As ACCOUNT_ID,
            MERCHANT.USERNAME AS MERCHANT_USERNAME,
            MERCHANT.PASSWORD AS MERCHANT_PASSWORD,
            MERCHANT.PARTNER AS MERCHANT_PARTNER,
            MERCHANT.VENDORNAME AS MERCHANT_VENDORNAME,
            SITE.ID AS SITE_ID,
            USERS.EMAIL_ID AS USERS_EMAIL_ID,
            ACCESS.ACCESS_DESCR AS ACCESS_ACCESS_DESCR,
            SITE.NAME AS SITE_NAME,
            USERS.FIRST_NAME AS USERS_FIRST_NAME,
            USERS.LAST_NAME AS USERS_LAST_NAME,
            ACCOUNT.LAST_BILLING_DATE AS ACCOUNT_LAST_BILLING_DATE,
            ACCOUNT.NEXT_BILLING_DATE AS ACCOUNT_NEXT_BILLING_DATE,
            MERCHANT.ID AS MERCHANT_ID,
            MERCHANT.TRAN_FEE_PERCENTAGE AS MERCHANT_TRAN_FEE_PERCENTAGE,
            MERCHANT.TRAN_FEE_FLAT AS MERCHANT_TRAN_FEE_FLAT,
            SHARE.CLIENT_SHARE AS SHARE_CLIENT_SHARE,
            (SELECT ACCOUNTNUMBER FROM ECOMM_CCINFO WHERE ECOMM_CCINFO.ID = ACCOUNT.CREDIT_CARD_ID) AS ECOMM_CCINFO_ACCOUNTNUMBER,
            MERCHANT.TRAN_FEE_PERCENTAGE_AMEX AS MERCHANT_TRAN_FEE_PERCENTAGE_AMEX,
            MERCHANT.TRAN_FEE_FLAT_AMEX AS MERCHANT_TRAN_FEE_FLAT_AMEX,
            CCINFO.ID AS CREDIT_CARD_ID,
            CCINFO.ACCOUNTNAME,
            CCINFO.ACCOUNTNUMBER,
            CCINFO.EXPMON,
            CCINFO.EXPYEAR,
            CCINFO.ADDRESS_1,
            CCINFO.ADDRESS_2,
            CCINFO.CITY,
            CCINFO.STATE,
            CCINFO.ZIP,
            CCINFO.PHONE,
            ESF.FEE AS ESF_FEE,
            CL.CODE AS CL_CODE,
            SITE.TIMEZONE,
            ACCESS.IS_FIRM_LEVEL_ACCESS AS ACCESS_IS_FIRM_LEVEL_ACCESS,
            USERACCESS.IS_FIRM_ACCESS_ADMIN AS USERACCESS_IS_FIRM_ACCESS_ADMIN,
            USERACCESS.FIRM_ADMIN_USER_ACCESS_ID AS USERACCESS_FIRM_ADMIN_USER_ACCESS_ID
        FROM
            ECOMM_USERS_ACCOUNT ACCOUNT
            INNER JOIN AUTH_USERS_ACCESS USERACCESS ON ACCOUNT.USER_ACCESS_ID = userAccess.ID
            INNER JOIN AUTH_USERS USERS ON USERS.ID = USERACCESS.USER_ID
            INNER JOIN AUTH_ACCESS ACCESS ON ACCESS.ID = USERACCESS.ACCESS_ID
            LEFT OUTER JOIN ECOMM_PROFIT_SHARE SHARE ON SHARE.ACCESS_ID = ACCESS.ID
            INNER JOIN ECOMM_SITE_ACCESS SITEACCESS ON SITEACCESS.ACCESS_ID = ACCESS.ID
            INNER JOIN ECOMM_SITE SITE ON SITE.ID = SITEACCESS.SITE_ID
            INNER JOIN ECOMM_MERCHANTINFO MERCHANT ON MERCHANT.SITE_ID = SITE.ID
            INNER JOIN ECOMM_CCINFO CCINFO ON CCINFO.ID = ACCOUNT.CREDIT_CARD_ID
            INNER JOIN ECOMM_SITE_ACCESS ESA ON ESA.ACCESS_ID = userAccess.ACCESS_ID
            INNER JOIN ECOMM_SUBSCRIPTIONFEE ESF ON ESF.SITEACCESS_ID = ESA.ID
            INNER JOIN CODELOOKUP CL ON CL.ID = ESF.SUBSCRIPTION_TYP_ID
        WHERE
            ACCOUNT.ACTIVE = 'Y' AND
            ACCOUNT.MARK_FOR_CANCELLATION = 'N' AND
            USERACCESS.ACTIVE = 'Y' AND
            ACCESS.ACTIVE = 'Y' AND
            SITEACCESS.ACTIVE = 'Y' AND
            SITE.ACTIVE = 'Y' AND
            MERCHANT.ACTIVE = 'Y' AND
            MERCHANT.IS_MICROPAYMENT_ACCOUNT = 'N' AND
           	ACCESS.IS_GOVERNMENT_ACCESS = 'N' AND
            CONVERT(date, NEXT_BILLING_DATE, 101) <= CONVERT(date, GETDATE(), 101) AND
            USERACCESS.IS_DELETED = 'N'
         ]]>
</sql-query>

<sql-query name="GET_CANCELLED_SUBSRCIPTIONS">
    <![CDATA[
   SELECT
          userAccess.USER_ID AS userAccess_USER_ID,
          userAccess.ID AS userAccess_ID,
          userAccess.ACCESS_ID AS userAccess_ACCESS_ID,
          users.EMAIL_ID AS users_userName,
          AA.IS_FIRM_LEVEL_ACCESS AS AA_IS_FIRM_LEVEL_ACCESS,
          userAccess.IS_FIRM_ACCESS_ADMIN AS userAccess_IS_FIRM_ACCESS_ADMIN
    FROM
           AUTH_USERS_ACCESS userAccess,
           AUTH_ACCESS AA,
           ECOMM_USERS_ACCOUNT userAccount,
           AUTH_USERS users
    WHERE
          userAccess.ID = userAccount.USER_ACCESS_ID AND
          userAccess.ACTIVE = 'Y' AND
          userAccount.ACTIVE = 'Y' AND
          userAccount.MARK_FOR_CANCELLATION = 'Y' AND
          users.ID = userAccess.USER_ID AND
          CONVERT(date, NEXT_BILLING_DATE, 101) <= CONVERT(date, GETDATE(), 101) AND
          userAccess.ACCESS_ID = AA.ID AND
          userAccess.IS_DELETED = 'N'
    ]]>
</sql-query>



<sql-query name="GET_RECURRING_TRANSACTIONS_BY_NODE">
    <![CDATA[
    SELECT
        retxhist.ID AS retxhist_ID,
        retxhist.TX_REFERENCE_NUM AS retxhist_TX_REFERENCE_NUM,
        (SELECT SUM(CASE INFO.TX_TYPE WHEN 'CHARGE' THEN INFO.TX_AMOUNT WHEN 'REFUND' THEN (0 - INFO.TX_AMOUNT) END) FROM ECOMM_RECUR_TX_HIST_INFO INFO WHERE INFO.TX_REFERENCE_NUM = retxhist.TX_REFERENCE_NUM) AS retxhist_TX_AMOUNT,
        retxhist.TX_DATE AS retxhist_TX_DATE,
        retxhist.TX_TYPE AS retxhist_TX_TYPE,
        retxhist.SETTLEMENT_STATUS AS retxhist_SETTLEMENT_STATUS,
        retxhist.USER_ID AS retxhist_USER_ID,
        retxhist.ACCESS_ID AS retxhist_ACCESS_ID,
        retxhist.CARD_NUMBER AS retxhist_CARD_NUMBER,
        retxhist.ACCOUNTNAME AS retxhist_ACCOUNTNAME,
        retxhist.DATE_TIME_CREATED AS retxhist_DATE_TIME_CREATED,
        retxhist.DATE_TIME_MOD AS retxhist_DATE_TIME_MOD,
        retxhist.MOD_USER_ID AS retxhist_MOD_USER_ID,
        retxhist.ACTIVE AS retxhist_ACTIVE,
        site.name AS site_NAME,
        access.ACCESS_DESCR AS access_ACCESS_DESCR,
        retxhist.CREATED_BY AS retxhist_CREATED_BY,
        retxhist.AMOUNT AS retxhist_AMOUNT,
        site.DESCRIPTION AS site_DESCRIPTION,
        site.TIMEZONE as site_TIMEZONE
    FROM
        ECOMM_RECUR_TX_HIST_INFO retxhist
        INNER JOIN AUTH_USERS users ON retxhist.USER_ID = users.ID
        INNER JOIN AUTH_ACCESS access ON access.ID = retxhist.ACCESS_ID
        INNER JOIN ECOMM_SITE_ACCESS siteaccess ON siteaccess.ACCESS_ID = access.ID
        INNER JOIN ECOMM_SITE site ON site.ID = siteaccess.SITE_ID
        INNER JOIN ECOMM_NODE node ON site.NODE_ID = node.ID
    WHERE
        users.EMAIL_ID = :userName AND
        node.NAME      = :nodeName
    ORDER BY
        retxhist.TX_DATE DESC
    ]]>
</sql-query>

<sql-query name="GET_RECURRING_TX_HISTORY">
    <![CDATA[
    SELECT
        retxhist.ID AS retxhist_ID,
        retxhist.TX_REFERENCE_NUM AS retxhist_TX_REFERENCE_NUM,
        retxhist.TX_AMOUNT AS retxhist_TX_AMOUNT,
        retxhist.TX_DATE AS retxhist_TX_DATE,
        retxhist.TX_TYPE AS retxhist_TX_TYPE,
        retxhist.SETTLEMENT_STATUS AS retxhist_SETTLEMENT_STATUS,
        retxhist.USER_ID AS retxhist_USER_ID,
        retxhist.ACCESS_ID AS retxhist_ACCESS_ID,
        retxhist.CARD_NUMBER AS retxhist_CARD_NUMBER,
        retxhist.ACCOUNTNAME AS retxhist_ACCOUNTNAME,
        retxhist.DATE_TIME_CREATED AS retxhist_DATE_TIME_CREATED,
        retxhist.DATE_TIME_MOD AS retxhist_DATE_TIME_MOD,
        retxhist.MOD_USER_ID AS retxhist_MOD_USER_ID,
        retxhist.ACTIVE AS retxhist_ACTIVE,
        site.DESCRIPTION AS site_DESCRIPTION,
        access.ACCESS_DESCR AS access_ACCESS_DESCR,
        retxhist.CREATED_BY AS retxhist_CREATED_BY,
        site.TIMEZONE as site_TIMEZONE
    FROM
        ECOMM_RECUR_TX_HIST_INFO retxhist
        INNER JOIN AUTH_USERS users ON retxhist.USER_ID = users.ID
        INNER JOIN AUTH_ACCESS access ON access.ID = retxhist.ACCESS_ID
        INNER JOIN ECOMM_SITE_ACCESS siteaccess ON siteaccess.ACCESS_ID = access.ID
        INNER JOIN ECOMM_SITE site ON site.ID = siteaccess.SITE_ID
    WHERE
        retxhist.TX_REFERENCE_NUM = :recurTxRefNum AND
        users.EMAIL_ID = :userName
    ORDER BY
        retxhist.TX_DATE DESC
    ]]>
</sql-query>

<sql-query name="GET_SP_RECURRING_TRANSACTION_LOOKUP" callable="true">
   <![CDATA[
        {call SP_RECUR_GET_TX_DETAILS (:txRefNumber, :siteName)}
    ]]>
</sql-query>

<sql-query name="GET_SP_REFERENCED_RECURRING_TRANSACTION_LOOKUP" callable="true">
   <![CDATA[
        {call SP_RECUR_GET_REF_TX_DETAILS (:originaltxRefNumber, :siteName)}
    ]]>
</sql-query>

<sql-query name="GET_ACCESS_BASED_ON_SITE_FOR_A_USER">
    <![CDATA[
    SELECT
        aa.ID AS aa_ID,
        aa.ACCESS_CD AS aa_ACCESS_CD,
        aa.ACCESS_DESCR AS aa_ACCESS_DESCR,
        site.ID AS site_ID
    FROM
        AUTH_USERS au,
        AUTH_USERS_ACCESS aua,
        AUTH_ACCESS aa,
        ECOMM_SITE site,
        ECOMM_SITE_ACCESS siteAccess
    WHERE
        au.ID = aua.USER_ID AND
        aua.ACCESS_ID = aa.ID AND
        siteAccess.SITE_ID = site.ID AND
        siteAccess.ACCESS_ID = aa.ID
        AND au.EMAIL_ID = :username
        AND site.NAME = :siteName AND
        aua.IS_DELETED = 'N'
    ]]>
</sql-query>

<sql-query name="GET_USER_ACCOUNTS_FOR_A_USER">
    <![CDATA[
        SELECT USERS.ID AS USERS_ID
        FROM
        AUTH_USERS USERS
        INNER JOIN AUTH_USERS_ACCESS USER_ACCESS ON USERS.ID = USER_ACCESS.USER_ID
        INNER JOIN ECOMM_USERS_ACCOUNT USERS_ACCOUNT ON USERS_ACCOUNT.USER_ACCESS_ID = USER_ACCESS.ID
        WHERE USERS.EMAIL_ID = :userName AND
        USER_ACCESS.IS_DELETED = 'N'
    ]]>
</sql-query>

<sql-query name="DELETE_CREDIT_CARD_OF_A_USER">
    <![CDATA[
        DELETE FROM ECOMM_CCINFO WHERE [USER_ID] = (SELECT USERS.ID FROM AUTH_USERS USERS WHERE USERS.EMAIL_ID = :userName)
    ]]>
</sql-query>

 <sql-query name="GET_RECUR_TX_BY_USER">
    SELECT
        retxhist.ID AS retxhist_ID,
        retxhist.TX_REFERENCE_NUM AS retxhist_TX_REFERENCE_NUM,
        (SELECT SUM(CASE INFO.TX_TYPE WHEN 'CHARGE' THEN INFO.TX_AMOUNT WHEN 'REFUND' THEN (0 - INFO.TX_AMOUNT) END) FROM
        ECOMM_RECUR_TX_HIST_INFO INFO WHERE INFO.TX_REFERENCE_NUM = retxhist.TX_REFERENCE_NUM) AS retxhist_TX_AMOUNT,
        retxhist.TX_DATE AS retxhist_TX_DATE,
        retxhist.TX_TYPE AS retxhist_TX_TYPE,
        retxhist.SETTLEMENT_STATUS AS retxhist_SETTLEMENT_STATUS,
        retxhist.USER_ID AS retxhist_USER_ID,
        retxhist.ACCESS_ID AS retxhist_ACCESS_ID,
        retxhist.CARD_NUMBER AS retxhist_CARD_NUMBER,
        retxhist.ACCOUNTNAME AS retxhist_ACCOUNTNAME,
        retxhist.DATE_TIME_CREATED AS retxhist_DATE_TIME_CREATED,
        retxhist.DATE_TIME_MOD AS retxhist_DATE_TIME_MOD,
        retxhist.MOD_USER_ID AS retxhist_MOD_USER_ID,
        retxhist.ACTIVE AS retxhist_ACTIVE,
        site.NAME AS site_NAME,
        access.ACCESS_DESCR AS access_ACCESS_DESCR,
        retxhist.CREATED_BY AS retxhist_CREATED_BY,
        site.TIMEZONE as site_TIMEZONE
    FROM
        ECOMM_RECUR_TX_HIST_INFO retxhist
        INNER JOIN AUTH_USERS users ON retxhist.USER_ID = users.ID
        INNER JOIN AUTH_ACCESS access ON access.ID = retxhist.ACCESS_ID
        INNER JOIN ECOMM_SITE_ACCESS siteaccess ON siteaccess.ACCESS_ID = access.ID
        INNER JOIN ECOMM_SITE site ON site.ID = siteaccess.SITE_ID
    WHERE
        users.EMAIL_ID = :userName
    ORDER BY
        retxhist.TX_DATE DESC
</sql-query>

 <sql-query name="GET_RECUR_TX_BY_SITE">
    SELECT
        retxhist.ID AS retxhist_ID,
        retxhist.TX_REFERENCE_NUM AS retxhist_TX_REFERENCE_NUM,
        (SELECT SUM(CASE INFO.TX_TYPE WHEN 'CHARGE' THEN INFO.TX_AMOUNT WHEN 'REFUND' THEN (0 - INFO.TX_AMOUNT) END) FROM
        ECOMM_RECUR_TX_HIST_INFO INFO WHERE INFO.TX_REFERENCE_NUM = retxhist.TX_REFERENCE_NUM) AS retxhist_TX_AMOUNT,
        retxhist.TX_DATE AS retxhist_TX_DATE,
        retxhist.TX_TYPE AS retxhist_TX_TYPE,
        retxhist.SETTLEMENT_STATUS AS retxhist_SETTLEMENT_STATUS,
        retxhist.USER_ID AS retxhist_USER_ID,
        retxhist.ACCESS_ID AS retxhist_ACCESS_ID,
        retxhist.CARD_NUMBER AS retxhist_CARD_NUMBER,
        retxhist.ACCOUNTNAME AS retxhist_ACCOUNTNAME,
        retxhist.DATE_TIME_CREATED AS retxhist_DATE_TIME_CREATED,
        retxhist.DATE_TIME_MOD AS retxhist_DATE_TIME_MOD,
        retxhist.MOD_USER_ID AS retxhist_MOD_USER_ID,
        retxhist.ACTIVE AS retxhist_ACTIVE,
        site.NAME AS site_NAME,
        access.ACCESS_DESCR AS access_ACCESS_DESCR,
        retxhist.CREATED_BY AS retxhist_CREATED_BY,
        site.TIMEZONE as site_TIMEZONE,
        site.DESCRIPTION as site_description
    FROM
        ECOMM_RECUR_TX_HIST_INFO retxhist
        INNER JOIN AUTH_USERS users ON retxhist.USER_ID = users.ID
        INNER JOIN AUTH_ACCESS access ON access.ID = retxhist.ACCESS_ID
        INNER JOIN ECOMM_SITE_ACCESS siteaccess ON siteaccess.ACCESS_ID = access.ID
        INNER JOIN ECOMM_SITE site ON site.ID = siteaccess.SITE_ID
    WHERE
        site.NAME = :siteName
    ORDER BY
        retxhist.TX_DATE DESC
</sql-query>

<sql-query name="GET_RECURRING_TRANSACTIONS_BY_SITE">
    <![CDATA[
    SELECT
        retxhist.ID AS retxhist_ID,
        retxhist.TX_REFERENCE_NUM AS retxhist_TX_REFERENCE_NUM,
        (SELECT SUM(CASE INFO.TX_TYPE WHEN 'CHARGE' THEN INFO.TX_AMOUNT WHEN 'REFUND' THEN (0 - INFO.TX_AMOUNT) END) FROM
        ECOMM_RECUR_TX_HIST_INFO INFO WHERE INFO.TX_REFERENCE_NUM = retxhist.TX_REFERENCE_NUM) AS retxhist_TX_AMOUNT,
        retxhist.TX_DATE AS retxhist_TX_DATE,
        retxhist.TX_TYPE AS retxhist_TX_TYPE,
        retxhist.SETTLEMENT_STATUS AS retxhist_SETTLEMENT_STATUS,
        retxhist.USER_ID AS retxhist_USER_ID,
        retxhist.ACCESS_ID AS retxhist_ACCESS_ID,
        retxhist.CARD_NUMBER AS retxhist_CARD_NUMBER,
        retxhist.ACCOUNTNAME AS retxhist_ACCOUNTNAME,
        retxhist.DATE_TIME_CREATED AS retxhist_DATE_TIME_CREATED,
        retxhist.DATE_TIME_MOD AS retxhist_DATE_TIME_MOD,
        retxhist.MOD_USER_ID AS retxhist_MOD_USER_ID,
        retxhist.ACTIVE AS retxhist_ACTIVE,
        site.NAME AS site_NAME,
        access.ACCESS_DESCR AS access_ACCESS_DESCR,
        retxhist.CREATED_BY AS retxhist_CREATED_BY,
        site.TIMEZONE as site_TIMEZONE,
        site.DESCRIPTION as site_description 
    FROM
        ECOMM_RECUR_TX_HIST_INFO retxhist
        INNER JOIN AUTH_USERS users ON retxhist.USER_ID = users.ID
        INNER JOIN AUTH_ACCESS access ON access.ID = retxhist.ACCESS_ID
        INNER JOIN ECOMM_SITE_ACCESS siteaccess ON siteaccess.ACCESS_ID = access.ID
        INNER JOIN ECOMM_SITE site ON site.ID = siteaccess.SITE_ID
    WHERE
        users.EMAIL_ID = :userName AND
        site.ID = :siteId
    ORDER BY
        retxhist.TX_DATE DESC
    ]]>
</sql-query>

<sql-query name="GET_RECURRING_TRANSACTIONS">
    <![CDATA[
    SELECT
        retxhist.ID AS retxhist_ID,
        retxhist.TX_REFERENCE_NUM AS retxhist_TX_REFERENCE_NUM,
        (SELECT SUM(CASE INFO.TX_TYPE WHEN 'CHARGE' THEN INFO.TX_AMOUNT WHEN 'REFUND' THEN (0 - INFO.TX_AMOUNT) END) FROM
        ECOMM_RECUR_TX_HIST_INFO INFO WHERE INFO.TX_REFERENCE_NUM = retxhist.TX_REFERENCE_NUM) AS retxhist_TX_AMOUNT,
        retxhist.TX_DATE AS retxhist_TX_DATE,
        retxhist.TX_TYPE AS retxhist_TX_TYPE,
        retxhist.SETTLEMENT_STATUS AS retxhist_SETTLEMENT_STATUS,
        retxhist.USER_ID AS retxhist_USER_ID,
        retxhist.ACCESS_ID AS retxhist_ACCESS_ID,
        retxhist.CARD_NUMBER AS retxhist_CARD_NUMBER,
        retxhist.ACCOUNTNAME AS retxhist_ACCOUNTNAME,
        retxhist.DATE_TIME_CREATED AS retxhist_DATE_TIME_CREATED,
        retxhist.DATE_TIME_MOD AS retxhist_DATE_TIME_MOD,
        retxhist.MOD_USER_ID AS retxhist_MOD_USER_ID,
        retxhist.ACTIVE AS retxhist_ACTIVE,
        site.NAME AS site_NAME,
        access.ACCESS_DESCR AS access_ACCESS_DESCR,
        retxhist.CREATED_BY AS retxhist_CREATED_BY,
        site.TIMEZONE as site_TIMEZONE,
        site.DESCRIPTION as site_description  
    FROM
        ECOMM_RECUR_TX_HIST_INFO retxhist
        INNER JOIN AUTH_USERS users ON retxhist.USER_ID = users.ID
        INNER JOIN AUTH_ACCESS access ON access.ID = retxhist.ACCESS_ID
        INNER JOIN ECOMM_SITE_ACCESS siteaccess ON siteaccess.ACCESS_ID = access.ID
        INNER JOIN ECOMM_SITE site ON site.ID = siteaccess.SITE_ID
    WHERE
        users.EMAIL_ID = :userName
    ORDER BY
        retxhist.TX_DATE DESC
    ]]>
</sql-query>

</hibernate-mapping>
