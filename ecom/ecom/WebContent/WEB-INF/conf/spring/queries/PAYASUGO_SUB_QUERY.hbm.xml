<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                                   "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>


<sql-query name="GET_DOCUMENT_PURCHASED_FOR_FIRM" callable="true">
     <![CDATA[
      SELECT 
		payAsUGOTxItem.BAR_NUMBER,
		payAsUGOTxItem.ITEM_QUANTITY	
		FROM	
			ECOMM_PAYASUGO_TX payAsUGoTX,
			ECOMM_PAYASUGO_TX_ITEMS payAsUGoTxItem,
			AUTH_USERS_ACCESS firmUserAccess,
			ECOMM_USERS_ACCOUNT userAccount
		WHERE
			firmUserAccess.USER_ID = :userId 
			AND	(firmUserAccess.FIRM_ADMIN_USER_ACCESS_ID = payAsUGoTx.FIRM_ADMIN_USER_ACCESS_ID 
					OR firmUserAccess.ID = payAsUGoTx.FIRM_ADMIN_USER_ACCESS_ID)
			AND payAsUGoTX.ACCESS_ID = :accessId 
			AND payAsUGOTx.TX_TYPE = 'CHARGE' 
			AND payAsUGoTX.ID = payAsUGOTxItem.PAYASUGO_TX_ID 
			AND payAsUGoTXItem.REFUND_TRAN_ID IS NULL 
			AND payAsUGOTxItem.IS_REFUNDED = 'N' 
			AND userAccount.USER_ACCESS_ID = payAsUGoTx.FIRM_ADMIN_USER_ACCESS_ID 
			AND payAsUGoTX.TX_DATE >= userAccount.LAST_BILLING_DATE
			AND payAsUGoTX.TX_DATE <= userAccount.NEXT_BILLING_DATE
	    ]]>
</sql-query>

<sql-query name="GET_PAYASUGO_TX_DETAIL" callable="true">
     <![CDATA[
        {call SP_PAYASUGO_GET_TRAN_DETAIL (:userName, :webTxId, :isRefund)}
    ]]>
</sql-query>

<sql-query name="GET_PAYASUGO_TX_BY_TX_REF_NUM" callable="true">
   <![CDATA[
        {call SP_PAYASUGO_GET_TX_DETAILS (:txRefNumber, :siteName)}
    ]]>
</sql-query>

<sql-query name="GET_PAYASUGO_TX_BY_DATE" callable="true" >
    <![CDATA[
        {call SP_PAYASUGO_GET_TX_HIST_FOREXTAPP (:siteName, :fromDate, :toDate, :txType)}
    ]]>
</sql-query>

<sql-query name="GET_PAYASUGO_TX_ITEM_BY_ITEM_ID" callable="true">
   <![CDATA[
        {call SP_PAYASUGO_GET_TX_ITEM_DETAILS (:itemId, :siteName)}
    ]]>
</sql-query>

<sql-query name="GET_REFERENCED_PAYASUGO_TX_ITEM_BY_ITEM_ID" callable="true">
   <![CDATA[
        {call SP_PAYASUGO_GET_REF_TX_ITEM_DETAILS (:itemId, :siteName)}
    ]]>
</sql-query>


<sql-query name="GET_REFERENCED_PAYASUGO_TX_BY_TX_REF_NUM" callable="true">
   <![CDATA[
        {call SP_PAYASUGO_GET_REF_TX_DETAILS (:txRefNumber, :siteName)}
    ]]>
</sql-query>

<sql-query name="GET_PAYASUGO_TX_ID_FOR_PURCHASED_DOC">
    <![CDATA[
		(
			SELECT DISTINCT
				payAsUGoTX.ID AS PAYASUGO_TX_ID,
				payAsUGoTxItems.CERTIFIED_DOCUMENT_NUMBER AS certifiedDocumentNumber,
				payAsUGoTX.IS_CERTIFIED AS IS_CERTIFIED
			FROM	ECOMM_PAYASUGO_TX payAsUGoTX,
				ECOMM_PAYASUGO_TX_ITEMS payAsUGoTxItems,
				AUTH_USERS AU,
				AUTH_ACCESS AA
			WHERE 
				AU.EMAIL_ID = :userName 
				AND payAsUGoTX.USER_ID = AU.ID 
				AND payAsUGoTX.ACCESS_ID = AA.ID
				AND payAsUGOTx.TX_TYPE = 'CHARGE'
				AND payAsUGoTx.FIRM_ADMIN_USER_ACCESS_ID IS NULL
				AND payAsUGoTxItems.PAYASUGO_TX_ID = payAsUGoTx.ID
				AND AA.ACCESS_CD = payAsUGoTxItems.UNIQUE_IDENTIFIER
				AND payAsUGoTxItems.PRODUCT_ID = :productId
				AND payAsUGoTxItems.UNIQUE_IDENTIFIER = :uniqueIdentifier
				AND payAsUGoTxItems.REFUND_TRAN_ID IS NULL 
				AND payAsUGoTxItems.IS_REFUNDED = 'N' 
				AND payAsUGoTxItems.IS_DOCUMENT_AVAILABLE = 'Y'
		)
		UNION				
		(
			SELECT DISTINCT
				payAsUGoTX.ID AS PAYASUGO_TX_ID,
				payAsUGoTxItems.CERTIFIED_DOCUMENT_NUMBER AS certifiedDocumentNumber,
				payAsUGoTX.IS_CERTIFIED AS IS_CERTIFIED
			FROM	ECOMM_PAYASUGO_TX payAsUGoTX,
				ECOMM_PAYASUGO_TX_ITEMS payAsUGoTxItems,
				AUTH_USERS_ACCESS firmUserAccess,
				AUTH_USERS AU,
				AUTH_ACCESS AA
			WHERE 
				AU.EMAIL_ID =:userName 
				AND firmUserAccess.USER_ID = AU.ID 
				AND	(firmUserAccess.FIRM_ADMIN_USER_ACCESS_ID = payAsUGoTx.FIRM_ADMIN_USER_ACCESS_ID 
					OR firmUserAccess.ID = payAsUGoTx.FIRM_ADMIN_USER_ACCESS_ID) 
				AND firmUserAccess.ACCESS_ID = AA.ID 
				AND payAsUGoTX.ACCESS_ID = AA.ID
				AND payAsUGOTx.TX_TYPE = 'CHARGE'
				AND payAsUGoTx.FIRM_ADMIN_USER_ACCESS_ID IS NOT NULL
				AND payAsUGoTxItems.PAYASUGO_TX_ID = payAsUGoTx.ID
				AND AA.ACCESS_CD = payAsUGoTxItems.UNIQUE_IDENTIFIER
				AND payAsUGoTxItems.PRODUCT_ID = :productId
				AND payAsUGoTxItems.UNIQUE_IDENTIFIER = :uniqueIdentifier
				AND payAsUGoTxItems.REFUND_TRAN_ID IS NULL 
				AND payAsUGoTxItems.IS_REFUNDED = 'N' 
				AND payAsUGoTxItems.IS_DOCUMENT_AVAILABLE = 'Y')			
    ]]>
</sql-query>

<sql-query name="GET_SHOPPING_CART">
    <![CDATA[
        SELECT
            shoppingCart.ID AS shoppingCart_ID
            ,shoppingCart.USER_ID AS shoppingCart_USER_ID
            ,shoppingCart.NODE_NAME AS shoppingCart_NODE_NAME
            ,shoppingCart.PRODUCT_ID AS shoppingCart_PRODUCT_ID
            ,shoppingCart.PRODUCT_TYPE AS shoppingCart_PRODUCT_TYPE
            ,shoppingCart.PAGE_COUNT AS shoppingCart_PAGE_COUNT
            ,shoppingCart.DOWNLOAD_URL AS shoppingCart_DOWNLOAD_URL
            ,shoppingCart.MOD_USER_ID AS shoppingCart_MOD_USER_ID
            ,shoppingCart.DATE_TIME_CREATED AS shoppingCart_DATE_TIME_CREATED
            ,shoppingCart.DATE_TIME_MOD AS shoppingCart_DATE_TIME_MOD
            ,shoppingCart.ACCESS_NAME AS shoppingCart_ACCESS_NAME
            ,shoppingCart.UNIQUE_IDENTIFIER AS shoppingCart_UNIQUE_IDENTIFIER
            ,shoppingCart.APPLICATION AS shoppingCart_APPLICATION
            ,shoppingCart.COMMENTS AS shoppingCart_COMMENTS
			,AA.ID AS AA_ID
			,AA.ACCESS_DESCR AS AA_ACCESS_DESCR
			,AA.IS_FIRM_LEVEL_ACCESS AS AA_IS_FIRM_LEVEL_ACCESS
			,AA.MAX_DOCUMENTS_ALLOWED AS AA_MAX_DOCUMENTS_ALLOWED
			,site.NAME AS site_NAME
			,users.EMAIL_ID AS users_USERNAME
			,users.BAR_NUMBER AS users_BAR_NUMBER
			,userAccess.IS_FIRM_ACCESS_ADMIN AS userAccess_IS_FIRM_ACCESS_ADMIN
			,shoppingCart.BAR_NUMBER AS shoppingCart_BAR_NUMBER
			,shoppingCart.LOCATION_ID AS shoppingCart_LOCATION_ID
			,AA.IS_GOVERNMENT_ACCESS AS AA_IS_GOVERNMENT_ACCESS
			,shoppingCart.IS_CERTIFIED as IS_CERTIFIED
			,shoppingCart.ITEM_NAME AS shoppingCart_ITEM_NAME
        FROM ECOMM_USERS_SHOPPING_CART shoppingCart,
            AUTH_USERS users,  
            AUTH_ACCESS AA,
			ECOMM_SITE_ACCESS siteAccess,
			ECOMM_SITE site,
			AUTH_USERS_ACCESS userAccess
        WHERE
            shoppingCart.USER_ID = users.ID AND
            users.EMAIL_ID =:userName AND
            AA.ACCESS_CD = shoppingCart.ACCESS_NAME AND
            siteAccess.ACCESS_ID = AA.ID AND
		    siteAccess.SITE_ID = site.ID AND
		    userAccess.ACCESS_ID = AA.ID AND
			userAccess.USER_ID = shoppingCart.USER_ID AND
			userAccess.IS_DELETED = 'N'
    ]]>
</sql-query>

<sql-query name="GET_SHOPPING_CART_BY_NODE_NAME">
    <![CDATA[
        SELECT
            shoppingCart.ID AS shoppingCart_ID
            ,shoppingCart.USER_ID AS shoppingCart_USER_ID
            ,shoppingCart.NODE_NAME AS shoppingCart_NODE_NAME
            ,shoppingCart.PRODUCT_ID AS shoppingCart_PRODUCT_ID
            ,shoppingCart.PRODUCT_TYPE AS shoppingCart_PRODUCT_TYPE
            ,shoppingCart.PAGE_COUNT AS shoppingCart_PAGE_COUNT
            ,shoppingCart.DOWNLOAD_URL AS shoppingCart_DOWNLOAD_URL
            ,shoppingCart.MOD_USER_ID AS shoppingCart_MOD_USER_ID
            ,shoppingCart.DATE_TIME_CREATED AS shoppingCart_DATE_TIME_CREATED
            ,shoppingCart.DATE_TIME_MOD AS shoppingCart_DATE_TIME_MOD
            ,shoppingCart.ACCESS_NAME AS shoppingCart_ACCESS_NAME
            ,shoppingCart.UNIQUE_IDENTIFIER AS shoppingCart_UNIQUE_IDENTIFIER
            ,shoppingCart.APPLICATION AS shoppingCart_APPLICATION
            ,shoppingCart.CREATED_BY AS shoppingCart_CREATED_BY
            ,shoppingCart.COMMENTS AS shoppingCart_COMMENTS
			,AA.ID AS AA_ID
			,AA.ACCESS_DESCR AS AA_ACCESS_DESCR
			,AA.IS_FIRM_LEVEL_ACCESS AS AA_IS_FIRM_LEVEL_ACCESS
			,AA.MAX_DOCUMENTS_ALLOWED AS AA_MAX_DOCUMENTS_ALLOWED				
			,site.NAME AS site_NAME
			,users.EMAIL_ID AS users_USERNAME
			,users.BAR_NUMBER AS users_BAR_NUMBER
			,userAccess.IS_FIRM_ACCESS_ADMIN AS userAccess_IS_FIRM_ACCESS_ADMIN
			,shoppingCart.BAR_NUMBER AS shoppingCart_BAR_NUMBER
			,shoppingCart.LOCATION_ID AS shoppingCart_LOCATION_ID
			,AA.IS_GOVERNMENT_ACCESS AS AA_IS_GOVERNMENT_ACCESS
			,shoppingCart.IS_CERTIFIED as IS_CERTIFIED
			,shoppingCart.ITEM_NAME AS shoppingCart_ITEM_NAME
        FROM ECOMM_USERS_SHOPPING_CART shoppingCart,
            AUTH_USERS users, 
            ECOMM_NODE node,
            AUTH_ACCESS AA,
			ECOMM_SITE_ACCESS siteAccess,
			ECOMM_SITE site,
			AUTH_USERS_ACCESS userAccess
        WHERE
           shoppingCart.USER_ID = users.ID AND
           shoppingCart.NODE_NAME = node.NAME AND
           users.EMAIL_ID =:userName AND
           node.NAME = :nodeName AND
           AA.ACCESS_CD = shoppingCart.ACCESS_NAME AND
           siteAccess.ACCESS_ID = AA.ID AND
		   siteAccess.SITE_ID = site.ID AND
		   userAccess.ACCESS_ID = AA.ID AND
		   userAccess.USER_ID = shoppingCart.USER_ID AND
		   userAccess.IS_DELETED = 'N'
    ]]>
</sql-query>

<sql-query name="GET_PAYASUGO_TX">
    <![CDATA[
        SELECT
            PAYASUGOTX.ID AS PAYASUGOTX_ID
            ,PAYASUGOTX.TX_REFERENCE_NUM AS PAYASUGOTX_TX_REFERENCE_NUM
            ,PAYASUGOTX.TX_AMOUNT AS PAYASUGOTX_TX_AMOUNT
            ,PAYASUGOTX.TX_DATE AS PAYASUGOTX_TX_DATE
            ,PAYASUGOTX.CARD_NUMBER AS PAYASUGOTX_CARD_NUMBER
            ,PAYASUGOTX.ACCOUNTNAME AS PAYASUGOTX_ACCOUNTNAME
            ,PAYASUGOTX.TX_TYPE AS PAYASUGOTX_TX_TYPE
            ,PAYASUGOTX.DATE_TIME_CREATED AS PAYASUGOTX_DATE_TIME_CREATED
            ,(SELECT NAME FROM ECOMM_SITE WHERE ID = PAYASUGOTX.SITE_ID) AS SITE_NAME
            ,ITEMSPURCHASED = (SELECT COUNT(ID) FROM ECOMM_PAYASUGO_TX_ITEMS WHERE PAYASUGO_TX_ID = PAYASUGOTX.ID)
            ,PAYASUGOTX.CREATED_BY AS PAYASUGOTX_CREATED_BY
            ,site.TIMEZONE AS SITE_TIMEZONE
            ,PAYASUGOTX.DATE_TIME_MOD AS PAYASUGOTX_DATE_TIME_MOD
            ,PAYASUGOTX.MOD_USER_ID AS PAYASUGOTX_MOD_USER_ID
            ,access.ACCESS_DESCR AS access_ACCESS_DESCR
            ,site.DESCRIPTION AS site_DESCRIPTION
        FROM
            ECOMM_PAYASUGO_TX PAYASUGOTX
            INNER JOIN AUTH_USERS users ON PAYASUGOTX.USER_ID = users.ID
            INNER JOIN ECOMM_SITE site ON PAYASUGOTX.SITE_ID  = site.ID            
            INNER JOIN AUTH_ACCESS access on access.ID = PAYASUGOTX.ACCESS_ID        
        WHERE
            users.EMAIL_ID = :userName
        ORDER BY
            PAYASUGOTX.TX_DATE desc
    ]]>
</sql-query>

<sql-query name="GET_PAYASUGO_TX_BY_SITE">
    <![CDATA[
        SELECT
            PAYASUGOTX.ID AS PAYASUGOTX_ID
            ,PAYASUGOTX.TX_REFERENCE_NUM AS PAYASUGOTX_TX_REFERENCE_NUM
            ,PAYASUGOTX.TX_AMOUNT AS PAYASUGOTX_TX_AMOUNT
            ,PAYASUGOTX.TX_DATE AS PAYASUGOTX_TX_DATE
            ,PAYASUGOTX.CARD_NUMBER AS PAYASUGOTX_CARD_NUMBER
            ,PAYASUGOTX.ACCOUNTNAME AS PAYASUGOTX_ACCOUNTNAME
            ,PAYASUGOTX.TX_TYPE AS PAYASUGOTX_TX_TYPE
            ,PAYASUGOTX.DATE_TIME_CREATED AS PAYASUGOTX_DATE_TIME_CREATED
            ,SITE.NAME AS SITE_NAME
            ,ITEMSPURCHASED = (SELECT COUNT(ID) FROM ECOMM_PAYASUGO_TX_ITEMS WHERE PAYASUGO_TX_ID = PAYASUGOTX.ID)
            ,PAYASUGOTX.CREATED_BY AS PAYASUGOTX_CREATED_BY
            ,site.TIMEZONE AS SITE_TIMEZONE
            ,PAYASUGOTX.DATE_TIME_MOD AS PAYASUGOTX_DATE_TIME_MOD
            ,PAYASUGOTX.MOD_USER_ID AS PAYASUGOTX_MOD_USER_ID
            ,access.ACCESS_DESCR AS access_ACCESS_DESCR
            ,site.DESCRIPTION AS site_DESCRIPTION
        FROM
            ECOMM_PAYASUGO_TX PAYASUGOTX
            INNER JOIN AUTH_USERS users ON PAYASUGOTX.USER_ID = users.ID
            INNER JOIN ECOMM_SITE site ON PAYASUGOTX.SITE_ID  = site.ID            
            INNER JOIN AUTH_ACCESS access on access.ID = PAYASUGOTX.ACCESS_ID        
        WHERE
            users.EMAIL_ID = :userName  AND
            SITE.Id = :siteId
        ORDER BY
            PAYASUGOTX.TX_DATE desc
    ]]>
</sql-query>

<sql-query name="UPDATE_SHOPPING_CART_COMMENTS">
    <![CDATA[
    	UPDATE ECOMM_USERS_SHOPPING_CART 
    			SET COMMENTS = :comments 
    		WHERE
				ID = :shoppingCartId
    ]]>
</sql-query>

<sql-query name="GET_LOCATION_BY_NAME_ACCESS_NAME">
    <![CDATA[
		SELECT LOCATION.ID, LOCATION.DESCRIPTION, LOCATION.SITE_ID , LOCATION.STATE_DESCRIPTION, 
		LOCATION.SEAL_OF_AUTHENTICITY, LOCATION.SIGNATURE, LOCATION.CLERK_NAME, LOCATION.DESIGNATION, 
		LOCATION.NOTE_OF_AUTHENTICITY, LOCATION.LOCATION_CODE
		FROM 
    		ECOMM_LOCATION LOCATION,
    		AUTH_ACCESS AA,
    		ECOMM_SITE_ACCESS SITEACCESS
    	WHERE 
	    	LOCATION.DESCRIPTION= :locationName AND 
    		LOCATION.SITE_ID = SITEACCESS.SITE_ID AND
    		SITEACCESS.ACCESS_ID = AA.ID AND
    		AA.ACCESS_CD = :accessName AND
    		SITEACCESS.ACTIVE = 'Y' AND
    		LOCATION.ACTIVE = 'Y'
    ]]>
</sql-query>

<sql-query name="GET_LOCATION_BY_SITE_ID">
    <![CDATA[
    		SELECT LOCATION.ID, LOCATION.DESCRIPTION, LOCATION.SITE_ID, LOCATION.STATE_DESCRIPTION, 
		LOCATION.CLERK_NAME, LOCATION.DESIGNATION, 
		LOCATION.NOTE_OF_AUTHENTICITY, LOCATION.LOCATION_CODE     
    	FROM 
    		ECOMM_LOCATION LOCATION 
    	WHERE 
	    	LOCATION.SITE_ID = :siteId AND  
    		LOCATION.ACTIVE = 'Y'
    ]]>
</sql-query>


<sql-query name="GET_LOCATION_SIGNATURE_BY_ID">
    <![CDATA[
    		SELECT LOCATION.SIGNATURE
    	FROM 
    		ECOMM_LOCATION LOCATION 
    	WHERE 
	    	LOCATION.ID = :locationId AND  
    		LOCATION.ACTIVE = 'Y'
    ]]>
</sql-query>

<sql-query name="GET_LOCATION_SEAL_BY_ID">
    <![CDATA[
    		SELECT 
    		LOCATION.ID, 
    		LOCATION.DESCRIPTION, 
    		LOCATION.SITE_ID, 
    		LOCATION.STATE_DESCRIPTION, 
			LOCATION.CLERK_NAME, 
			LOCATION.DESIGNATION, 
			LOCATION.NOTE_OF_AUTHENTICITY, 
			LOCATION.LOCATION_CODE,
			LOCATION.SEAL_OF_AUTHENTICITY
    	FROM 
    		ECOMM_LOCATION LOCATION 
    	WHERE 
	    	LOCATION.ID = :locationId AND  
    		LOCATION.ACTIVE = 'Y'
    ]]>
</sql-query>

<sql-query name="ARCHIVE_PAYASUGO_TX" callable="true">
   <![CDATA[
        {call SP_ARCHIVE_PAYASUGO_TX (:toDate, :archivedBy, :archiveComments)}
    ]]>
</sql-query>

<sql-query name="GET_GRANICUS_REVENUE_FROM_PAYASUGO_TX" callable="true">
     <![CDATA[
        {call GET_GRANICUS_REVENUE_FROM_PAYASUGO_TX (:siteName, :revenueThresholdStartDate)}
    ]]>
</sql-query>

<sql-query name="GET_DOCUMENTID_BY_CERTIFIED_DOCUMENT_NUMBER">
    <![CDATA[
    		Select TX_ITEMS.ITEM_NAME, TX_ITEMS.DATE_TIME_CREATED 
			FROM ECOMM_PAYASUGO_TX TX 
			INNER JOIN ECOMM_PAYASUGO_TX_ITEMS TX_ITEMS ON TX_ITEMS.PAYASUGO_TX_ID = TX.ID
			WHERE TX_ITEMS.CERTIFIED_DOCUMENT_NUMBER = :certifiedDocumentNumber
			AND TX.SITE_ID = (SELECT ID FROM ECOMM_SITE WHERE NAME = :siteName)
    ]]>
</sql-query>

</hibernate-mapping>
