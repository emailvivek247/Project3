<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping >

<sql-query name="GET_ALL_SUBSCRIPTIONS" callable="true">
    <![CDATA[ {call SP_USER_GET_ALL_SUBSCRIPTIONS (:userName, :nodeName, :siteName, :activeSubscriptionsOnly, :firmAdminSubscriptionsOnly) } ]]>
</sql-query>

<sql-query name="GET_SUBSCRIPTION_DETAILS" callable="true">
    <![CDATA[ {call SP_COMMON_GET_SUBSCRIPTION_DETAILS (:userName, :accessId) } ]]>
</sql-query>

<sql-query name="GET_USER_ACCOUNT_BY_USER_ACCESS_ID">
    <![CDATA[
    SELECT
        ACCOUNT.ID AS ACCOUNT_ID,
        ACCOUNT.LAST_BILLING_DATE AS ACCOUNT_LAST_BILLING_DATE,
        ACCOUNT.NEXT_BILLING_DATE AS ACCOUNT_NEXT_BILLING_DATE,
        ACCOUNT.ACTIVE AS ACCOUNT_ACTIVE,
        MERCHANT.USERNAME AS MERCHANT_USERNAME,
        MERCHANT.PASSWORD AS MERCHANT_PASSWORD,
        MERCHANT.VENDORNAME AS MERCHANT_VENDORNAME,
        MERCHANT.PARTNER AS MERCHANT_PARTNER,
        SUBFEE.FEE AS SUBFEE_FEE,
        CREDITCARD.ID AS CREDITCARD_ID,
        CREDITCARD.ACCOUNTNAME AS CREDITCARD_ACCOUNTNAME,
        CREDITCARD.ACCOUNTNUMBER AS CREDITCARD_ACCOUNTNUMBER,
        CREDITCARD.EXPMON AS CREDITCARD_EXPMON,
        CREDITCARD.EXPYEAR AS CREDITCARD_EXPYEAR,
        CREDITCARD.ADDRESS_1 AS CREDITCARD_ADDRESS_1,
        CREDITCARD.ADDRESS_2 AS CREDITCARD_ADDRESS_2,
        CREDITCARD.CITY AS CREDITCARD_CITY,
        CREDITCARD.STATE AS CREDITCARD_STATE,
        CREDITCARD.ZIP AS CREDITCARD_ZIP,
        CREDITCARD.PHONE AS CREDITCARD_PHONE,
        CREDITCARD.ACTIVE AS CREDITCARD_ACTIVE,
        SITE.NAME AS SITE_NAME,
        ACCOUNT.MARK_FOR_CANCELLATION AS ACCOUNT_MARK_FOR_CANCELLATION,
        ACCESS.ACCESS_DESCR AS ACCESS_ACCESS_DESCR,
        (SELECT CL.CATEGORY AS CL_CATEGORY FROM CODELOOKUP CL WHERE CL.ID = SUBFEE.SUBSCRIPTION_TYP_ID) AS ACCESSTYPE,
        ACCESS.ID AS ACCESS_ID,
        LOOKUP.CODE AS LOOKUP_CODE,
        SUBFEE.TERM AS SUBFEE_TERM,
        USERS.ID AS USERS_ID,
        SITE.ID AS SITE_ID,
        MERCHANT.ID AS MERCHANT_ID,
        MERCHANT.TRAN_FEE_PERCENTAGE AS MERCHANT_TRAN_FEE_PERCENTAGE,
        MERCHANT.TRAN_FEE_FLAT AS MERCHANT_TRAN_FEE_FLAT,
        SHARE.CLIENT_SHARE AS SHARE_CLIENT_SHARE,
        MERCHANT.TRAN_FEE_PERCENTAGE_AMEX AS MERCHANT_TRAN_FEE_PERCENTAGE_AMEX,
        MERCHANT.TRAN_FEE_FLAT_AMEX AS MERCHANT_TRAN_FEE_FLAT_AMEX,
        ACCESS.IS_VISIBLE AS ACCESS_IS_VISIBLE,
        LAST_TX_ID = (SELECT TOP 1 INFO.TX_REFERENCE_NUM FROM ECOMM_RECUR_TX_HIST_INFO INFO WHERE INFO.USER_ID = USERS.ID AND INFO.ACCESS_ID = ACCESS.ID AND INFO.TX_TYPE = 'CHARGE' ORDER BY TX_DATE DESC),
        SITEACCESS.ID AS SITEACCESS_ID,
        SITE.TIMEZONE, 
		USERACCESS.IS_FIRM_ACCESS_ADMIN,
		USERACCESS.FIRM_ADMIN_USER_ACCESS_ID,
		ACCESS.IS_FIRM_LEVEL_ACCESS AS ACCESS_IS_FIRM_LEVEL_ACCESS,
		ACCESS.MAX_USERS_ALLOWED AS ACCESS_MAX_USERS_ALLOWED,
		ACCESS.MAX_DOCUMENTS_ALLOWED AS ACCESS_MAX_DOCUMENTS_ALLOWED,
		ACCESS.IS_GOVERNMENT_ACCESS AS ACCESS_IS_GOVERNMENT_ACCESS
    FROM
        AUTH_USERS_ACCESS USERACCESS
        INNER JOIN AUTH_USERS USERS ON USERS.ID = USERACCESS.USER_ID
        LEFT OUTER JOIN ECOMM_CCINFO CREDITCARD ON CREDITCARD.USER_ID = USERS.ID
        LEFT OUTER JOIN ECOMM_USERS_ACCOUNT ACCOUNT ON USERACCESS.ID = ACCOUNT.USER_ACCESS_ID
        INNER JOIN AUTH_ACCESS ACCESS ON ACCESS.ID = USERACCESS.ACCESS_ID
        LEFT OUTER JOIN ECOMM_PROFIT_SHARE SHARE ON SHARE.ACCESS_ID = ACCESS.ID
        INNER JOIN ECOMM_SITE_ACCESS SITEACCESS ON SITEACCESS.ACCESS_ID = ACCESS.ID
        INNER JOIN ECOMM_SUBSCRIPTIONFEE SUBFEE ON SITEACCESS.ID = SUBFEE.SITEACCESS_ID
        INNER JOIN ECOMM_SITE SITE ON SITE.ID = SITEACCESS.SITE_ID
        INNER JOIN ECOMM_MERCHANTINFO MERCHANT ON MERCHANT.SITE_ID = SITE.ID
        INNER JOIN CODELOOKUP LOOKUP ON SUBFEE.SUBSCRIPTION_TYP_ID = LOOKUP.ID
    WHERE USERACCESS.ID =:userAccessId AND
        USERS.EMAIL_ID =:userName AND
        ACCESS.ACTIVE = 'Y' AND
        SITEACCESS.ACTIVE = 'Y' AND
        MERCHANT.IS_MICROPAYMENT_ACCOUNT = 'N' AND
        ACCESS.GUEST_FLG = 'N' AND
        USERACCESS.IS_DELETED = 'N'
    ]]>
</sql-query>

<sql-query name="DELETE_USER_ACCOUNT_BY_USER_ACCESS_ID">
    <![CDATA[
        DELETE FROM ECOMM_USERS_ACCOUNT WHERE USER_ACCESS_ID IN (:userAccessIds)
    ]]>
</sql-query>

<sql-query name="DELETE_USER_ACCESS_BY_USER_ACCESS_ID">
    <![CDATA[ UPDATE AUTH_USERS_ACCESS SET IS_DELETED = 'Y' WHERE ID IN (:userAccessIds) ]]>
</sql-query>

<sql-query name="DELETE_USER_TERM">
    <![CDATA[ 
    		DELETE 
    	FROM 
    		AUTH_USERS_TERMS 
    	WHERE 
    		USER_ID in (:userIds) AND  
    		TERM_ID in ( SELECT ID FROM AUTH_TERMS WHERE SITE_ID = :siteId )
     ]]>
</sql-query>

<sql-query name="DELETE_FIRM_USERS_ACCESS_BY_AMDIN_USER_ACCESS_ID">
    <![CDATA[
    UPDATE 
        AUTH_USERS_ACCESS 
    SET IS_DELETED = 'Y' 
    WHERE
        IS_FIRM_ACCESS_ADMIN = 'N' AND
        ACCESS_ID = :accessId AND
        FIRM_ADMIN_USER_ACCESS_ID = :firmAdminUserAccessId 
    ]]>
</sql-query>

<sql-query name="GET_ACCESS_DETAILS">
    <![CDATA[
    SELECT
        SITE.ID AS SITE_ID,
        SITE.NAME AS SITE_NAME,
        SITE.ENABLE_MICRO_TX_WEB AS SITE_ENABLE_MICRO_TX_WEB,
        SUBFEE.FEE AS SUBFEE_FEE,
        SUBFEE.TERM AS SUBFEE_TERM,
        CODELOOKUP.CODE AS CODELOOKUP_CODE,
        MERCHANT.USERNAME AS MERCHANT_USERNAME,
        MERCHANT.PASSWORD AS MERCHANT_PASSWORD,
        MERCHANT.VENDORNAME AS MERCHANT_VENDORNAME,
        MERCHANT.PARTNER AS MERCHANT_PARTNER,
        MERCHANT.IS_MICROPAYMENT_ACCOUNT AS MERCHANT_IS_MICROPAYMENT_ACCOUNT,
        CREDITUSAGEFEE.TX_FEE_PERCENT AS CREDITUSAGEFEE_TX_FEE_PERCENT,
        CREDITUSAGEFEE.TX_FLAT_FEE_CUTOFF_AMT AS CREDITUSAGEFEE_TX_FLAT_FEE_CUTOFF_AMT,
        CREDITUSAGEFEE.TX_FEE_FLAT AS CREDITUSAGEFEE_TX_FEE_FLAT,
        CREDITUSAGEFEE.DOWNGRADE_FEE AS CREDITUSAGEFEE_DOWNGRADE_FEE,
        CREDITUSAGEFEE.MICRO_TX_CUT_OFF AS CREDITUSAGEFEE_MICRO_TX_CUT_OFF,
        ACCESS.ID AS ACCESS_ID,
        ACCESS.ACCESS_CD AS ACCESS_ACCESS_CD,
        ACCESS.ACCESS_DESCR AS ACCESS_ACCESS_DESCR,
        CODELOOKUP.CATEGORY AS CODELOOKUP_CATEGORY,
        MERCHANT.ID AS MERCHANT_ID,
        ACCESS.IS_AUTHORIZATION_REQUIRED AS ACCESS_IS_AUTHORIZATION_REQUIRED,
        MERCHANT.TRAN_FEE_PERCENTAGE AS MERCHANT_TRAN_FEE_PERCENTAGE,
        MERCHANT.TRAN_FEE_FLAT AS MERCHANT_TRAN_FEE_FLAT,
        SHARE.CLIENT_SHARE AS SHARE_CLIENT_SHARE,
        MERCHANT.TRAN_FEE_PERCENTAGE_AMEX AS MERCHANT_TRAN_FEE_PERCENTAGE_AMEX,
        MERCHANT.TRAN_FEE_FLAT_AMEX AS MERCHANT_TRAN_FEE_FLAT_AMEX,
        ACCESS.IS_VISIBLE AS ACCESS_IS_VISIBLE,
        SITE.TIMEZONE,
        SITE.AUTOACTIVATE AS SITE_AUTOACTIVATE,
        TERM.ID AS TERM_ID , 
        ACCESS.IS_FIRM_LEVEL_ACCESS AS ACCESS_IS_FIRM_LEVEL_ACCESS,
        ACCESS.MAX_USERS_ALLOWED AS ACCESS_MAX_USERS_ALLOWED,
        ACCESS.MAX_DOCUMENTS_ALLOWED AS ACCESS_MAX_DOCUMENTS_ALLOWED,
        SITE.DESCRIPTION AS SITE_DESCRIPTION,
        SITE.REVENUE_THRESHOLD_AMOUNT AS SITE_REVENUE_THRESHOLD_AMOUNT,
	    SITE.REVENUE_THRESHOLD_START_DATE AS SITE_REVENUE_THRESHOLD_START_DATE
    FROM
        AUTH_ACCESS ACCESS
        LEFT OUTER JOIN ECOMM_PROFIT_SHARE SHARE ON SHARE.ACCESS_ID = ACCESS.ID
        INNER JOIN ECOMM_SITE_ACCESS SITEACCESS ON SITEACCESS.ACCESS_ID = ACCESS.ID
        INNER JOIN ECOMM_SITE SITE ON SITE.ID = SITEACCESS.SITE_ID
        INNER JOIN ECOMM_MERCHANTINFO MERCHANT ON MERCHANT.SITE_ID = SITE.ID
        INNER JOIN ECOMM_CREDITUSAGE_FEE CREDITUSAGEFEE ON CREDITUSAGEFEE.SITE_ID = SITE.ID
        INNER JOIN ECOMM_SUBSCRIPTIONFEE SUBFEE ON SUBFEE.SITEACCESS_ID = SITEACCESS.ID
        INNER JOIN CODELOOKUP CODELOOKUP ON CODELOOKUP.ID = SUBFEE.SUBSCRIPTION_TYP_ID
        INNER JOIN AUTH_TERMS TERM ON TERM.SITE_ID = SITE.ID
    WHERE
        ACCESS.ACTIVE = 'Y' AND
        SITEACCESS.ACTIVE = 'Y' AND
        ACCESS.GUEST_FLG = 'N' AND
        SITE.ACTIVE = 'Y' AND
        MERCHANT.ACTIVE = 'Y' AND
        MERCHANT.IS_MICROPAYMENT_ACCOUNT = 'N' AND
        CREDITUSAGEFEE.ACTIVE = 'Y' AND
        SUBFEE.ACTIVE = 'Y' AND
        TERM.ACTIVE = 'Y' AND
        ACCESS.ID IN :accessIdList
    ]]>
</sql-query>

<sql-query name="GET_ACCESS_DETAILS_BY_NAME">
    <![CDATA[
        SELECT
            SITE.NAME AS SITE_NAME,
            SUBFEE.FEE AS SUBFEE_FEE,
            SUBFEE.TERM AS SUBFEE_TERM,
            CODELOOKUP.CODE AS CODELOOKUP_CODE,
            MERCHANT.USERNAME AS MERCHANT_USERNAME,
            MERCHANT.PASSWORD AS MERCHANT_PASSWORD,
            MERCHANT.VENDORNAME AS MERCHANT_VENDORNAME,
            MERCHANT.PARTNER AS MERCHANT_PARTNER,
            CREDITUSAGEFEE.TX_FEE_PERCENT AS CREDITUSAGEFEE_TX_FEE_PERCENT,
            CREDITUSAGEFEE.TX_FLAT_FEE_CUTOFF_AMT AS CREDITUSAGEFEE_TX_FLAT_FEE_CUTOFF_AMT,
            CREDITUSAGEFEE.TX_FEE_FLAT AS CREDITUSAGEFEE_TX_FEE_FLAT,
            ACCESS.ID AS ACCESS_ID,
            ACCESS.ACCESS_CD AS ACCESS_ACCESS_CD,
            ACCESS.ACCESS_DESCR AS ACCESS_ACCESS_DESCR,
            CODELOOKUP.CATEGORY AS CODELOOKUP_CATEGORY,
            CREDITUSAGEFEE.DOWNGRADE_FEE AS CREDITUSAGEFEE_DOWNGRADE_FEE,
            SITE.ID AS SITE_ID,
            MERCHANT.ID AS MERCHANT_ID,
            ACCESS.IS_AUTHORIZATION_REQUIRED AS ACCESS_IS_AUTHORIZATION_REQUIRED,
            MERCHANT.TRAN_FEE_PERCENTAGE AS MERCHANT_TRAN_FEE_PERCENTAGE,
            MERCHANT.TRAN_FEE_FLAT AS MERCHANT_TRAN_FEE_FLAT,
            SHARE.CLIENT_SHARE AS SHARE_CLIENT_SHARE,
            MERCHANT.TRAN_FEE_PERCENTAGE_AMEX AS MERCHANT_TRAN_FEE_PERCENTAGE_AMEX,
            MERCHANT.TRAN_FEE_FLAT_AMEX AS MERCHANT_TRAN_FEE_FLAT_AMEX,
            ACCESS.IS_VISIBLE AS ACCESS_IS_VISIBLE,
            MERCHANT.IS_MICROPAYMENT_ACCOUNT AS MERCHANT_IS_MICROPAYMENT_ACCOUNT,
            SITE.TIMEZONE AS SITE_TIMEZONE,
            SITE.ENABLE_MICRO_TX_OTC AS SITE_ENABLE_MICRO_TX_OTC,
            SITE.ENABLE_MICRO_TX_WEB AS SITE_ENABLE_MICRO_TX_WEB,
            SITE.REVENUE_THRESHOLD_AMOUNT AS SITE_REVENUE_THRESHOLD_AMOUNT,
			SITE.REVENUE_THRESHOLD_START_DATE AS SITE_REVENUE_THRESHOLD_START_DATE, 
            CREDITUSAGEFEE.MICRO_TX_CUT_OFF AS CREDITUSAGEFEE_MICRO_TX_CUT_OFF,
            ACCESS.IS_FIRM_LEVEL_ACCESS AS ACCESS_IS_FIRM_LEVEL_ACCESS,
            SITE.DESCRIPTION AS SITE_DESCRIPTION 
        FROM
            AUTH_ACCESS ACCESS
            LEFT OUTER JOIN ECOMM_PROFIT_SHARE SHARE ON SHARE.ACCESS_ID = ACCESS.ID
            INNER JOIN ECOMM_SITE_ACCESS SITEACCESS ON SITEACCESS.ACCESS_ID = ACCESS.ID
            INNER JOIN ECOMM_SITE SITE ON SITE.ID = SITEACCESS.SITE_ID
            INNER JOIN ECOMM_MERCHANTINFO MERCHANT ON MERCHANT.SITE_ID = SITE.ID
            INNER JOIN ECOMM_CREDITUSAGE_FEE CREDITUSAGEFEE ON CREDITUSAGEFEE.SITE_ID = SITE.ID
            INNER JOIN ECOMM_SUBSCRIPTIONFEE SUBFEE ON SUBFEE.SITEACCESS_ID = SITEACCESS.ID
            INNER JOIN CODELOOKUP CODELOOKUP ON CODELOOKUP.ID = SUBFEE.SUBSCRIPTION_TYP_ID
        WHERE
            ACCESS.ACTIVE = 'Y' AND
            SITEACCESS.ACTIVE = 'Y' AND
            ACCESS.GUEST_FLG = 'N' AND
            SITE.ACTIVE = 'Y' AND
            MERCHANT.ACTIVE = 'Y' AND
            CREDITUSAGEFEE.ACTIVE = 'Y' AND
            SUBFEE.ACTIVE = 'Y' AND
            ACCESS.ACCESS_CD =  :accessName
    ]]>
</sql-query>


<sql-query name="GET_USER_ACCESS_DETAIL">
    <![CDATA[
    SELECT
        sc.ID AS sc_ID,
        sc.SITE_ID AS sc_SITE_ID,
        sc.EMAIL_TEMPLATE_FOLDER AS sc_EMAIL_TEMPLATE_FOLDER,
        sc.FROM_EMAIL_ADDRESS AS sc_FROM_EMAIL_ADDRESS,
        sc.PAYMENT_CONF_SUB AS sc_PAYMENT_CONF_SUB,
        sc.CHANGE_SUBSCRIPTION_SUB AS sc_CHANGE_SUBSCRIPTION_SUB,
        sc.CANCEL_SUBSCRIPTION_SUB AS sc_CANCEL_SUBSCRIPTION_SUB,
        sc.REACTIVATE_SUBSCRIPTION_SUB AS sc_REACTIVATE_SUBSCRIPTION_SUB,
        sc.RECURRING_PAYMENT_SUCCESS_SUB AS sc_RECURRING_PAYMENT_SUCCESS_SUB,
        sc.RECURRING_PAYMENT_UNSUCCESSFUL_SUB AS sc_RECURRING_PAYMENT_UNSUCCESSFUL_SUB,
        sc.PAYMENT_CONF_TEMPLATE AS sc_PAYMENT_CONF_TEMPLATE,
        sc.CHANGE_SUBSCRIPTION_TEMPLATE AS sc_CHANGE_SUBSCRIPTION_TEMPLATE,
        sc.CANCEL_SUBSCRIPTION_TEMPLATE AS sc_CANCEL_SUBSCRIPTION_TEMPLATE,
        sc.REACTIVATE_CANCELLED_SUBSCRIPTION_TEMPLATE AS sc_REACTIVATE_CANCELLED_SUBSCRIPTION_TEMPLATE,
        sc.RECURRING_PAYMENT_SUCCESS_TEMPLATE AS sc_RECURRING_PAYMENT_SUCCESS_TEMPLATE,
        sc.RECURRING_PAYMENT_UNSUCCESSFUL_TEMPLATE AS sc_RECURRING_PAYMENT_UNSUCCESSFUL_TEMPLATE,
        sc.DATE_TIME_CREATED AS sc_DATE_TIME_CREATED,
        sc.DATE_TIME_MOD AS sc_DATE_TIME_MOD,
        sc.MOD_USER_ID AS sc_MOD_USER_ID,
        sc.ACTIVE AS sc_ACTIVE,
        sc.WEB_PAYMENT_CONFIRMATION_SUB AS sc_WEB_PAYMENT_CONFIRMATION_SUB,
        sc.WEB_PAYMENT_CONFIRMATION_TEMPLATE AS sc_WEB_PAYMENT_CONFIRMATION_TEMPLATE,
        site.Name AS site_Name,
        sc.REMOVE_SUBSCRIPTION_SUB AS sc_REMOVE_SUBSCRIPTION_SUB,
        sc.REMOVE_SUBSCRIPTION_TEMPLATE AS sc_REMOVE_SUBSCRIPTION_TEMPLATE,
        sc.CREATED_BY AS sc_CREATED_BY,
        access.ACCESS_DESCR AS access_ACCESS_DESCR,
        authUser.FIRST_NAME AS authUser_FIRST_NAME,
        authUser.LAST_NAME AS authUser_LAST_NAME,
        sc.ACCESS_AUTHORIZATION_SUB AS sc_ACCESS_AUTHORIZATION_SUB,
        sc.ACCESS_AUTHORIZATION_TEMPLATE AS sc_ACCESS_AUTHORIZATION_TEMPLATE,
        authUser.EMAIL_ID AS authUser_EMAIL_ID,
        site.DESCRIPTION AS site_DESCRIPTION,
        userAccess.IS_FIRM_ACCESS_ADMIN  userAccess_IS_FIRM_ACCESS_ADMIN,
        userAccess.FIRM_ADMIN_USER_ACCESS_ID  userAccess_FIRM_ADMIN_USER_ACCESS_ID,
        access.ID as access_ID,
        access.IS_FIRM_LEVEL_ACCESS access_IS_FIRM_LEVEL_ACCESS,
        access.IS_GOVERNMENT_ACCESS access_IS_GOVERNMENT_ACCESS,
        userAccess.ACTIVE AS userAccess_ACTIVE 
  FROM
        SITE_CONFIGURATION sc,
        ECOMM_SITE site,
        ECOMM_SITE_ACCESS siteAccess,
        AUTH_ACCESS access,
        AUTH_USERS_ACCESS userAccess,
        AUTH_USERS authUser
  WHERE  sc.SITE_ID = site.ID AND
         site.ID = siteAccess.SITE_ID AND
         siteAccess.ACCESS_ID = access.ID AND
         userAccess.ACCESS_ID = access.ID AND
         userAccess.USER_ID = authUser.ID AND
         userAccess.ID = :userAccessId AND
         userAccess.IS_DELETED = 'N'
    ]]>
</sql-query>


    <sql-query name="GET_ACCESS_IDS_FOR_PAID_ACCESS" >
        <![CDATA[
    (
		SELECT
			  DISTINCT payAsUGoTx.ACCESS_ID
		  FROM	
		  	ECOMM_PAYASUGO_TX payAsUGoTx
		  WHERE 
		  	payAsUGoTx.USER_ID = :userId
	)
	UNION
    (
    	SELECT
		   recurringHist.ACCESS_ID
	   	FROM 
	   		ECOMM_RECUR_TX_HIST_INFO recurringHist
	   	WHERE 
	   		recurringHist.USER_ID = :userId
	 ) 
        ]]>
    </sql-query>
    
    <sql-query name="GET_GRANICUS_REVENUE_FROM_RECUR_TX" callable="true">
     <![CDATA[
        {call GET_GRANICUS_REVENUE_FROM_RECUR_TX (:siteName, :revenueThresholdStartDate)}
    ]]>
</sql-query>

</hibernate-mapping>
