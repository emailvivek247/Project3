<project name="ecomadmin" default="buildwar" basedir=".">
	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"/>
	<property file="build.properties"/>
	<property name="dist"                value="${basedir}\dist"/>
	<property name="storetype"           value="${storetype}"/>
	<property name="keystore"            value="${keystore}"/>
	<property name="alias"               value="${alias}"/>
	<property name="storepass"           value="${storepass}"/>
	<property name="java.src"            value="${basedir}/src"/>
	<property name="webcontent"          value="${basedir}/WebContent/"/>
	<property name="webcontent.web-inf"  value="${webcontent}/WEB-INF/"/>
	<property name="webcontent.lib" 	 value="${webcontent.web-inf}/lib"/>
	<property name="reports"             value="${basedir}/WebContent/reports/"/>
	<property name="server-conf"         value="${webcontent.web-inf}\conf\spring\properties\server.properties"/>
    <property name="build_info"          value="${basedir}\resources\build.properties"/>
	<property name="atomikos-conf"       value="${basedir}\resources\transactions.properties"/>

    <target name="revision" unless="increment.revision" >
        <propertyfile  file="${build_info}">
            <entry key="build.revision.number" type="int" operation="+" value="1" pattern="000"/>
        </propertyfile>
    </target>

    <target name="minor" unless="increment.minor" >
        <propertyfile  file="${build_info}">
            <entry key="build.minor.number" type="int" operation="+" value="1" pattern="0"/>
            <entry key="build.revision.number" type="int" value="0" pattern="000"/>
        </propertyfile>
    </target>

    <target name="major" unless="increment.major" >
        <propertyfile  file="${build_info}">
            <entry key="build.major.number" type="int" operation="+" value="1" pattern="0"/>
            <entry key="build.minor.number" type="int" value="0" pattern="0"/>
            <entry key="build.revision.number" type="int" value="0" pattern="000"/>
        </propertyfile>
    </target>

    <target name="all" unless="increment.all">
        <propertyfile file="${build_info}">
            <entry key="build.major.number" type="int" operation="+" value="1" pattern="0" />
            <entry key="build.minor.number" type="int" operation="+" value="1" pattern="0" />
            <entry key="build.revision.number" type="int" operation="+" value="1" pattern="000" />
        </propertyfile>
    </target>

    <tstamp>
        <format property="buildDate" pattern="MM-dd-yyyy HH:mm a" />
    </tstamp>

    <target name="buildDate" unless="increment.buildDate" >
        <propertyfile  file="${build_info}">
            <entry key="build.date" value="${buildDate}"/>
        </propertyfile>
    </target>

	<path id="compile.classpath">
		<fileset dir="${webcontent.lib}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="jasper.compile.classpath">
        <fileset dir="${webcontent.lib}">
            <include name="*.jar"/>
        </fileset>
		<pathelement location="build/classes"/>
	</path>

	<path id="cxf.classpath">
		<fileset dir="${webcontent.lib}">
			<include name="**/*.jar" />
			<include name="${webcontent.web-inf}\lib\cxf-2.6.2.jar" />
		</fileset>
		<fileset dir="${WSlib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<taskdef name="jrc" classname="net.sf.jasperreports.ant.JRAntCompileTask">
		<classpath refid="compile.classpath"/>
	</taskdef>

	<target name="clean">
		<delete dir="dist"/>
		<delete dir="build"/>
	</target>

	<target name="init" depends="clean">
		<mkdir dir="build/classes"/>
		<mkdir dir="dist"/>
		<mkdir dir="dist/lib"/>
		<mkdir dir="${java.clientStub.src}" />
	</target>

	<target name="ConfUpdate" depends="init" >
		<propertyfile file="${server-conf}" >
			<entry  key="jdbc.url" value="${jdbc.url}" />
			<entry  key="jdbc.username" value="${jdbc.username}"/>
			<entry  key="jdbc.password" value="${jdbc.password}"/>
			<entry  key="webservice.username" value="${webservice.username}"/>
			<entry  key="webservice.password" value="${webservice.password}"/>
			<entry  key="email.useractivation.requesturl" value="${email.useractivation.requesturl}"/>
			<entry  key="ecom.facadeservice.resturl" value="${ecom.facadeservice.resturl}"/>
			<entry  key="ecomadmin.facadeservice.resturl" value="${ecomadmin.facadeservice.resturl}"/>
			<entry  key="externalService.facadeservice.resturl" value="${externalService.facadeservice.resturl}"/>
		    <entry  key="activemq.url" value="${activemq.url}"/>
			<entry  key="ecom.emailtemplates.path" value="${ecom.emailtemplates.path}"/>
			<entry  key="role.psosuperadmin" value="${role.psosuperadmin}"/>
			<entry  key="role.psotxadmin" value="${role.psotxadmin}"/>
			<entry  key="role.psouseradmin" value="${role.psouseradmin}"/>
			<entry  key="role.psouser" value="${role.psouser}"/>
			<entry  key="activemq.emailqueue" value="${activemq.emailqueue}"/>
			<entry  key="emailservice.emailserver" value="${emailservice.emailserver}"/>
			<entry  key="emailservice.emailport" value="${emailservice.emailport}"/>
			<entry  key="emailservice.username" value="${emailservice.username}"/>
			<entry  key="emailservice.password" value="${emailservice.password}"/>
			<entry  key="jasper.cache.cutoffpagesbeforecache" value="${jasper.cache.cutoffpagesbeforecache}"/>
			<entry  key="jasper.tempfile.path" value="${jasper.tempfile.path}"/>
            <entry key="reCaptcha.privateKey" value="${reCaptcha.privateKey}" />
	        <entry key="reCaptcha.publicKey" value="${reCaptcha.publicKey}" />
		</propertyfile>
		<propertyfile file="${atomikos-conf}" >
			<entry  key="com.atomikos.icatch.log_base_dir" value="${atomikos.base_dir}" />
			<entry  key="com.atomikos.icatch.tm_unique_name" value="${com.atomikos.icatch.tm_unique_name}" />
		</propertyfile>
		<xmltask source="${basedir}\resources\logback.xml" dest="${basedir}\resources\logback.xml" failWithoutMatch="true">
			<replace path="/configuration/appender/file/text()" withText="${logfileprefix}"/>
			<replace path="/configuration/appender/rollingPolicy/fileNamePattern/text()" withText="${logfileprefixpattern}"/>
			<replace path="/configuration/appender/subject/text()" withText="${logfileSubject}" />
			<replace path="/configuration/appender/to/text()" withText="${toEmail}" />
			<replace path="/configuration/appender/from/text()" withText="${fromEmail}" />
		</xmltask>
	</target>

	<target name="compile" depends="ConfUpdate">
		<javac destdir="build/classes" debug="true" srcdir="${java.src}" encoding="utf-8">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>

	<target name="SignJarsForApplet" depends="compile">
		<tstamp>
			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>
		<jar jarfile="${webcontent}\applets\ReportApplet.jar" compress="true">
			<fileset dir="build/classes">
				<include name="com\fdt\ecomadmin\applet\*.class" />
			</fileset>
			<fileset dir="${java.src}">
				<include name="com\fdt\ecomadmin\applet\IDAutomationMICR.ttf" />
			</fileset>
			 <manifest>
	            <attribute name="Application-Name" value="accept"/>
	            <attribute name="Trusted-Only" value="true"/>
	            <attribute name="Codebase" value="*"/>
	            <attribute name="Permissions" value="all-permissions"/>
	        </manifest>
		</jar>
		<signjar jar="${webcontent}\applets\ReportApplet.jar"
				 storetype = "${storetype}"
				 keystore = "${keystore}"
				 alias="${alias}"
				 storepass="${storepass}" />
		<signjar jar="${webcontent}\applets\jasperreports-applet-5.5.0.jar"
						 storetype = "${storetype}"
						 keystore = "${keystore}"
						 alias="${alias}"
						 storepass="${storepass}"/>
		<signjar jar="${webcontent}\applets\jasperreports-fonts-5.5.0.jar"
								 storetype = "${storetype}"
								 keystore = "${keystore}"
								 alias="${alias}"
								 storepass="${storepass}"/>
		<signjar jar="${webcontent}\applets\iText-2.1.7.jar"
					 storetype = "${storetype}"
					 keystore = "${keystore}"
					 alias="${alias}"
		storepass="${storepass}"/>
		<signjar jar="${webcontent}\applets\poi-3.6.jar"
					 storetype = "${storetype}"
					 keystore = "${keystore}"
					 alias="${alias}"
		storepass="${storepass}"/>
		<signjar jar="${webcontent}\applets\poi-ooxml-3.6-20091214.jar"
					 storetype = "${storetype}"
					 keystore = "${keystore}"
					 alias="${alias}"
		storepass="${storepass}"/>
		<signjar jar="${webcontent}\applets\commons-logging-1.1.1.jar"
				 storetype = "${storetype}"
				 keystore = "${keystore}"
				 alias="${alias}"
				 storepass="${storepass}"/>
		<signjar jar="${webcontent}\applets\commons-collections-3.2.1.jar"
				 storetype = "${storetype}"
				 keystore = "${keystore}"
				 alias="${alias}"
				 storepass="${storepass}"/>
		<signjar jar="${webcontent}\applets\commons-digester-1.7.jar"
						 storetype = "${storetype}"
						 keystore = "${keystore}"
						 alias="${alias}"
						 storepass="${storepass}"/>
		<signjar jar="${webcontent}\applets\commons-lang-2.6.jar"
						 storetype = "${storetype}"
						 keystore = "${keystore}"
						 alias="${alias}"
						 storepass="${storepass}" />
	</target>

	<target name="cxfWSDLToJava"  depends="init">
		<java classname="org.apache.cxf.tools.wsdlto.WSDLToJava" fork="true">
			<arg value="-client"/>
			<arg value="-b"/>
			<arg value="binding.xml"/>
			<arg value="-d"/>
			<arg value="${java.clientStub.src}"/>
			<arg value="-compile" />
			<arg value="${wsdl}"/>
			<classpath>
				<path refid="cxf.classpath"/>
			</classpath>
		</java>
	</target>

	<target name="buildjar" depends="compile">
		<tstamp>
			<format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>
		<jar jarfile="dist\lib\ecomadmin.jar" compress="true">
			<fileset dir="build/classes">
				<exclude name="com/fdt/ecomadmin/applet/**/*" />
			</fileset>
		</jar>
		<mkdir dir="${webcontent}/WEB-INF/classes" />
		<copy todir="${webcontent}/WEB-INF/classes" >
			<fileset dir="${basedir}/resources">
				<include name="*.properties" />
				<include name="*.xml" />
				<include name="*.png" />
			</fileset>
		</copy>
	</target>

	<target name="compileJasperReports" depends="buildjar">
		<jrc srcdir="${reports}"
           destdir="${reports}"
           tempdir="${reports}"
           keepjava="false"
           xmlvalidation="true">
           <classpath refid="jasper.compile.classpath"/>
           <include name="**/*.jrxml"/>
		</jrc>
	</target>

	<target name="buildwar" depends="buildDate, compileJasperReports">
		<war destfile="dist/${warfilename}" webxml="${webcontent.web-inf}/web.xml">
			<fileset dir="${webcontent}">
				<include name="WEB-INF/lib/*.jar" />
				<include name="WEB-INF/conf/**/*.*" />
				<include name="WEB-INF/classes/*.png" />
				<include name="WEB-INF/classes/*.properties" />
				<include name="WEB-INF/classes/*.xml" />
				<exclude name="WEB-INF/classes/*.class" />
			</fileset>
			<fileset dir="${webcontent}">
				<include name="applets/**/*.*" />
				<include name="reports/**/*.*" />
				<include name="WEB-INF/resources/**/*.*" />
				<include name="smartcharts/**/*.*" />
				<include name="WEB-INF/view/**/*.*" />
			</fileset>
			<lib dir="dist/lib" />
		</war>
		<delete dir="build" />
		<delete dir="${java.clientStub.src}" />
	</target>

</project>