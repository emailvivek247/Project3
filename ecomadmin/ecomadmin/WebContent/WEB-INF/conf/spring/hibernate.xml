<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx.xsd">

    <import resource="datasource.xml" />

    <tx:annotation-driven transaction-manager="txManager" />

    <bean id="transactionTemplate"  class="org.springframework.transaction.support.TransactionTemplate"
        p:transactionManager-ref="txManager" />

    <bean id="txManager" class="org.springframework.transaction.jta.JtaTransactionManager"
        p:transactionManager-ref = "atomikosTransactionManager"
        p:userTransaction-ref    = "atomikosUserTransaction" />

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init"
            destroy-method="close" depends-on="userTransactionService"
        p:forceShutdown="false"
        p:startupTransactionService="false" />

    <bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
            init-method="init"  destroy-method="shutdownForce">
            <!-- Atomikos Properties Are defined in transaction.properties files-->
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="userTransactionService"
        p:transactionTimeout="${atomikos.transaction.timeout}" />

    <bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jtaTransactionManager" ref="txManager" />
        <property name="packagesToScan">
            <list>
                <value>com.fdt.common.entity</value>
                <value>com.fdt.security.entity</value>
                <value>com.fdt.ecom.entity</value>
                <value>com.fdt.alerts.entity</value>
                <value>com.fdt.payasugotx.entity</value>
                <value>com.fdt.webtx.entity</value>
                <value>com.fdt.otctx.entity</value>
                <value>com.fdt.recurtx.entity</value>
                <value>com.fdt.subscriptions.entity</value>
            </list>
        </property>
        <property name="mappingLocations">
            <list>
                <value>/WEB-INF/conf/spring/queries/common.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2008Dialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
                <prop key="hibernate.transaction.flush_before_completion">false</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>
    </bean>

    <bean id="strongEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <property name="config">
            <bean class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
                <property name="algorithm" value="PBEWITHSHA256AND256BITAES-CBC-BC" />
                <property name="passwordEnvName" value="HIBERNATE_KEY" />
            </bean>
        </property>
        <property name="provider" ref="bouncyCastleProvider" />
        <property name="stringOutputType" value = "HEXADECIMAL" />
    </bean>

    <bean id="hibernateStringEncryptor" class="org.jasypt.hibernate4.encryptor.HibernatePBEStringEncryptor"
        p:encryptor-ref="strongEncryptor" p:registeredName="hibernateStringEncryptor" />

</beans>